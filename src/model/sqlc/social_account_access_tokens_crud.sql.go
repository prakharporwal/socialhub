// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: social_account_access_tokens_crud.sql

package db

import (
	"context"
)

const findAccountAccessToken = `-- name: FindAccountAccessToken :one
SELECT platform, platform_account_id, platform_username, access_token, refresh_token, token_scope, token_type, user_email, organisation_group_id, expires_at, created_at, updated_at FROM socialhub.p_socialmedia_account_access_tokens
WHERE organisation_group_id=($1) and user_email=($2)
`

type FindAccountAccessTokenParams struct {
	OrganisationGroupID string `json:"organisation_group_id"`
	UserEmail           string `json:"user_email"`
}

func (q *Queries) FindAccountAccessToken(ctx context.Context, arg FindAccountAccessTokenParams) (SocialhubPSocialmediaAccountAccessToken, error) {
	row := q.db.QueryRowContext(ctx, findAccountAccessToken, arg.OrganisationGroupID, arg.UserEmail)
	var i SocialhubPSocialmediaAccountAccessToken
	err := row.Scan(
		&i.Platform,
		&i.SocialAccountID,
		&i.PlatformUsername,
		&i.AccessToken,
		&i.RefreshToken,
		&i.TokenScope,
		&i.TokenType,
		&i.UserEmail,
		&i.OrganisationGroupID,
		&i.ExpiresAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
