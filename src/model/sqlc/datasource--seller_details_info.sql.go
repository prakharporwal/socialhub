// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: datasource--seller_details_info.sql

package db

import (
	"context"
)

const sellerService_fetchSellerDetailsForListing = `-- name: SellerService_fetchSellerDetailsForListing :one
SELECT l.listing_id, s.seller_id, s.seller_name, is_verified
FROM seller_systems.p_seller_account s JOIN product_service.p_listings l
ON s.seller_id=l.seller_id
WHERE l.listing_id=($1)
`

type SellerService_fetchSellerDetailsForListingRow struct {
	ListingID  string `json:"listing_id"`
	SellerID   int64  `json:"seller_id"`
	SellerName string `json:"seller_name"`
	IsVerified bool   `json:"is_verified"`
}

func (q *Queries) SellerService_fetchSellerDetailsForListing(ctx context.Context, listingID string) (SellerService_fetchSellerDetailsForListingRow, error) {
	row := q.db.QueryRowContext(ctx, sellerService_fetchSellerDetailsForListing, listingID)
	var i SellerService_fetchSellerDetailsForListingRow
	err := row.Scan(
		&i.ListingID,
		&i.SellerID,
		&i.SellerName,
		&i.IsVerified,
	)
	return i, err
}
