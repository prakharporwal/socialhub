// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AppAccountOauth2AccessTokens_SaveToken(ctx context.Context, arg AppAccountOauth2AccessTokens_SaveTokenParams) (AppAccountOauth2AccessTokens_SaveTokenRow, error)
	BiboComic_LandingPage_SaveUserForEarlyAccess(ctx context.Context, email string) (string, error)
	BlockSessionById(ctx context.Context, sessionID uuid.UUID) (SocialhubSession, error)
	BlockSessionFamily(ctx context.Context, email string) (SocialhubSession, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (SocialhubSession, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error)
	FetchLinkedinURNbyAccountId(ctx context.Context, arg FetchLinkedinURNbyAccountIdParams) (string, error)
	FetchPostsToBePublished(ctx context.Context, limit int32) ([]FetchPostsToBePublishedRow, error)
	FindLinkedInAccountAccessToken(ctx context.Context, arg FindLinkedInAccountAccessTokenParams) (SocialhubLinkedinAccountAccessToken, error)
	GetSession(ctx context.Context, sessionID uuid.UUID) (SocialhubSession, error)
	GetUserDetails(ctx context.Context, arg GetUserDetailsParams) (GetUserDetailsRow, error)
	LinkedinScheduledUserPosts_fetchAllPosts(ctx context.Context, arg LinkedinScheduledUserPosts_fetchAllPostsParams) ([]SocialhubLinkedinScheduledUserPost, error)
	PageService_createPageLayoutConfig(ctx context.Context, config string) (PageService_createPageLayoutConfigRow, error)
	PageService_getPageLayoutConfig(ctx context.Context, pageID int64) (PageService_getPageLayoutConfigRow, error)
	PostInfo_createPost(ctx context.Context, arg PostInfo_createPostParams) (PostInfo_createPostRow, error)
	// soft delete the post
	PostInfo_deletePost(ctx context.Context, postID uuid.UUID) (PostInfo_deletePostRow, error)
	PostInfo_getPost(ctx context.Context, postID uuid.UUID) (PostInfo_getPostRow, error)
	PostInfo_getPostCreator(ctx context.Context, postID uuid.UUID) (string, error)
	PostInfo_getPostsPaginated(ctx context.Context, arg PostInfo_getPostsPaginatedParams) ([]PostInfo_getPostsPaginatedRow, error)
	PostInfo_updatePost(ctx context.Context, arg PostInfo_updatePostParams) (PostInfo_updatePostRow, error)
	ProductService_fetchProductListingDetailsForProductPage(ctx context.Context, arg ProductService_fetchProductListingDetailsForProductPageParams) (ProductService_fetchProductListingDetailsForProductPageRow, error)
	SaveLinkedinAccessToken(ctx context.Context, arg SaveLinkedinAccessTokenParams) (SaveLinkedinAccessTokenRow, error)
	SaveLinkedinURN(ctx context.Context, arg SaveLinkedinURNParams) (SaveLinkedinURNRow, error)
	ScheduleAUserPostOnLinkedin(ctx context.Context, arg ScheduleAUserPostOnLinkedinParams) (ScheduleAUserPostOnLinkedinRow, error)
	SellerService_fetchSellerDetailsForListing(ctx context.Context, listingID string) (SellerService_fetchSellerDetailsForListingRow, error)
	TwitterAccountAccessTokens_fetchAccountInfoByUserEmail(ctx context.Context, arg TwitterAccountAccessTokens_fetchAccountInfoByUserEmailParams) (TwitterAccountAccessTokens_fetchAccountInfoByUserEmailRow, error)
	TwitterAccountAccessTokens_fetchAll(ctx context.Context, limit int32) ([]TwitterAccountAccessTokens_fetchAllRow, error)
	TwitterAccountAccessTokens_findAccessToken(ctx context.Context, arg TwitterAccountAccessTokens_findAccessTokenParams) (TwitterAccountAccessTokens_findAccessTokenRow, error)
	TwitterAccountAccessTokens_saveAccessToken(ctx context.Context, arg TwitterAccountAccessTokens_saveAccessTokenParams) (TwitterAccountAccessTokens_saveAccessTokenRow, error)
	TwitterAccountAccessTokens_updateUsernameAndId(ctx context.Context, arg TwitterAccountAccessTokens_updateUsernameAndIdParams) (TwitterAccountAccessTokens_updateUsernameAndIdRow, error)
	UpdatePostStatus(ctx context.Context, arg UpdatePostStatusParams) (UpdatePostStatusRow, error)
	UserPasswordResetTokens_blockToken(ctx context.Context, arg UserPasswordResetTokens_blockTokenParams) (UserPasswordResetTokens_blockTokenRow, error)
	UserPasswordResetTokens_delete(ctx context.Context, token string) error
	UserPasswordResetTokens_findUserIdByToken(ctx context.Context, token string) (UserPasswordResetTokens_findUserIdByTokenRow, error)
	UserPasswordResetTokens_insert(ctx context.Context, arg UserPasswordResetTokens_insertParams) (UserPasswordResetTokens_insertRow, error)
	Users_updatePassword(ctx context.Context, arg Users_updatePasswordParams) (Users_updatePasswordRow, error)
}

var _ Querier = (*Queries)(nil)
