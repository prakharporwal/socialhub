// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: linkedin_user_posts.sql

package db

import (
	"context"
	"time"
)

const linkedinScheduleUserPost = `-- name: LinkedinScheduleUserPost :one
INSERT INTO socialhub.linkedin_scheduled_user_posts (scheduled_post_id,
                                                     account_id,
                                                     linkedin_urn,
                                                     post_id,
                                                     scheduled_time,
                                                     status,
                                                     created_by)
VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING scheduled_post_id, post_id, scheduled_time
`

type LinkedinScheduleUserPostParams struct {
	ScheduledPostID string    `json:"scheduled_post_id"`
	AccountID       int64     `json:"account_id"`
	LinkedinUrn     string    `json:"linkedin_urn"`
	PostID          string    `json:"post_id"`
	ScheduledTime   time.Time `json:"scheduled_time"`
	Status          string    `json:"status"`
	CreatedBy       string    `json:"created_by"`
}

type LinkedinScheduleUserPostRow struct {
	ScheduledPostID string    `json:"scheduled_post_id"`
	PostID          string    `json:"post_id"`
	ScheduledTime   time.Time `json:"scheduled_time"`
}

func (q *Queries) LinkedinScheduleUserPost(ctx context.Context, arg LinkedinScheduleUserPostParams) (LinkedinScheduleUserPostRow, error) {
	row := q.db.QueryRowContext(ctx, linkedinScheduleUserPost,
		arg.ScheduledPostID,
		arg.AccountID,
		arg.LinkedinUrn,
		arg.PostID,
		arg.ScheduledTime,
		arg.Status,
		arg.CreatedBy,
	)
	var i LinkedinScheduleUserPostRow
	err := row.Scan(&i.ScheduledPostID, &i.PostID, &i.ScheduledTime)
	return i, err
}
