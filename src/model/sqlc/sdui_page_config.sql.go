// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: sdui_page_config.sql

package db

import (
	"context"
	"database/sql"
)

const pageService_createPageLayoutConfig = `-- name: PageService_createPageLayoutConfig :one
INSERT INTO page_service.p_page_layout_config(config)
VALUES ($1)
RETURNING page_id, config
`

type PageService_createPageLayoutConfigRow struct {
	PageID int64  `json:"page_id"`
	Config string `json:"config"`
}

func (q *Queries) PageService_createPageLayoutConfig(ctx context.Context, config string) (PageService_createPageLayoutConfigRow, error) {
	row := q.db.QueryRowContext(ctx, pageService_createPageLayoutConfig, config)
	var i PageService_createPageLayoutConfigRow
	err := row.Scan(&i.PageID, &i.Config)
	return i, err
}

const pageService_getPageLayoutConfig = `-- name: PageService_getPageLayoutConfig :one
SELECT config, datasource_service FROM page_service.p_page_layout_config
WHERE page_id=($1)
`

type PageService_getPageLayoutConfigRow struct {
	Config            string         `json:"config"`
	DatasourceService sql.NullString `json:"datasource_service"`
}

func (q *Queries) PageService_getPageLayoutConfig(ctx context.Context, pageID int64) (PageService_getPageLayoutConfigRow, error) {
	row := q.db.QueryRowContext(ctx, pageService_getPageLayoutConfig, pageID)
	var i PageService_getPageLayoutConfigRow
	err := row.Scan(&i.Config, &i.DatasourceService)
	return i, err
}
