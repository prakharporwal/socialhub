{"version":3,"file":"static/js/forgotPasswordRequest.6ef5c15b.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","hooks/useAuth.tsx","pages/ForgotPasswordPage/index.tsx","pages/ForgotPasswordPage/ForgotPasswordRequestPage.tsx","utils/cookieUtils.ts"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  CardBody,\n  Link,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"md\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Heading as={\"h1\"}>Sociohub</Heading>\n      <h2>Control across all your socials</h2>\n      <Image\n        src=\"/onboarding-poster.webp\"\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","import ForgotPasswordRequestPage from \"./ForgotPasswordRequestPage\";\nexport default ForgotPasswordRequestPage;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport FormContainer from \"../../components/FormContainer\";\n\nimport CONSTANTS from \"../../EnvConstant\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst ForgotPasswordRequestPage: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>();\n  const [organisationId, setOrganisationId] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n\n  const toast = useToast();\n  const auth = useAuth();\n\n  const submitForgotPasswordForm = (e: any) => {\n    e.preventDefault();\n\n    console.debug({ userEmail, organisationId });\n\n    if (userEmail === \"\") {\n      toast({ title: \"Fields cannot be empty!\", status: \"error\" });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/password/forgot/request\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_email: userEmail,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(res.statusText);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          status: \"success\",\n          title: \"Sent Reset link to your Email\",\n          duration: 5000,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          status: \"error\",\n          title: \"Failed to submit request!\",\n          duration: 5000,\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  return (\n    <FormContainer headingText=\"Forgot Password\">\n      <Box>\n        <form onSubmit={submitForgotPasswordForm}>\n          {/* <FormControl id=\"organisation-id\" isRequired>\n            <FormLabel>Organisation Id</FormLabel>\n            <Input\n              type=\"text\"\n              value={organisationId}\n              required={true}\n              onChange={(e) => {\n                setOrganisationId(e.currentTarget.value);\n              }}\n            />\n          </FormControl> */}\n          <FormControl id=\"user-email\" isRequired>\n            <FormLabel>Enter your registered Email</FormLabel>\n            <Input\n              type=\"email\"\n              value={userEmail}\n              required={true}\n              onChange={(e) => {\n                setUserEmail(e.currentTarget.value);\n              }}\n            />\n            <Box h={4}></Box>\n            <Button\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Send Reset Link\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordRequestPage;\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n"],"names":["api_server_url","path_prefix","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Heading","as","Image","src","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","fontSize","headingText","Text","color","description","Box","rounded","bg","useColorModeValue","boxShadow","p","useAuth","tokenFromStorage","useMemo","getCookie","_useState","useState","undefined","_useState2","_slicedToArray","auth","isAuthenticated","accessToken","isSubmitting","setIsSubmitting","_useState3","_useState4","organisationId","_useState5","_useState6","userEmail","setUserEmail","toast","useToast","FormContainer","onSubmit","e","preventDefault","console","debug","fetch","CONSTANTS","headers","method","body","JSON","stringify","user_email","then","res","ok","json","Error","statusText","data","log","status","title","duration","catch","err","finally","FormControl","id","isRequired","FormLabel","Input","type","value","required","onChange","currentTarget","Button","isLoading","name","nameLenPlus","length","document","cookie","split","map","c","trim","filter","substring","concat","decodeURIComponent"],"sourceRoot":""}