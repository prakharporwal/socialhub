{"version":3,"file":"static/js/SidebarWithHeader.f62749d9.chunk.js","mappings":"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","sources":["components/buttons/ColorModeToggleButton.tsx","components/SimpleSidebarWithHeader.tsx","utils/logoutUtils.ts"],"sourcesContent":["import { Button, ButtonProps, Flex, useColorMode } from \"@chakra-ui/react\";\nimport { BsSun, BsMoon } from \"react-icons/bs\";\n\nexport default function ColorModeToggleButton(props: ButtonProps) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    /**\n     * Ideally, only the button component should be used (without Flex).\n     * Props compatible with <Button /> are supported.\n     */\n    <Flex h=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n      <Button\n        aria-label=\"Toggle Color Mode\"\n        onClick={toggleColorMode}\n        _focus={{ boxShadow: \"none\" }}\n        w=\"fit-content\"\n        {...props}\n      >\n        {colorMode === \"light\" ? <BsMoon /> : <BsSun />}\n      </Button>\n    </Flex>\n  );\n}\n","import { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Avatar,\n  Box,\n  CloseButton,\n  Flex,\n  HStack,\n  VStack,\n  Icon,\n  useColorModeValue,\n  Link,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Image,\n  DrawerOverlay,\n} from \"@chakra-ui/react\";\n\nimport {\n  Outlet,\n  Link as ReactLink,\n  NavLink as RouterNavLink,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport { FiHome, FiMenu, FiBell, FiChevronDown } from \"react-icons/fi\";\nimport { IconType } from \"react-icons\";\nimport ColorModeToggleButton from \"./buttons/ColorModeToggleButton\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport { SiInstagram, SiLinkedin, SiTwitter, SiYoutube } from \"react-icons/si\";\nimport { logOut } from \"../utils/logoutUtils\";\n\ninterface LinkItemProps {\n  name: string;\n  linkTo?: string;\n  icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: FiHome, linkTo: \"/app/home\" },\n  { name: \"Create Post\", icon: FaPlusCircle, linkTo: \"/app/post/new\" },\n  { name: \"Linkedin\", icon: SiLinkedin, linkTo: \"/app/linkedin\" },\n  { name: \"Twitter\", icon: SiTwitter, linkTo: \"/app/twitter\" },\n  { name: \"Instagram\", icon: SiInstagram, linkTo: \"/app/instagram\" },\n  { name: \"Youtube\", icon: SiYoutube, linkTo: \"/app/youtube\" },\n  // { name: \"Facebook\", icon: SiFacebook, linkTo: \"/facebook\" },\n];\n\nexport default function SidebarWithHeader({\n  children,\n}: {\n  children?: ReactNode;\n}) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\">\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size={\"xs\"}\n      >\n        <DrawerOverlay />\n        <DrawerContent width={\"100px\"}>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav\n        onOpen={onOpen}\n        user={{\n          username: window.localStorage\n            .getItem(\"current_username\")\n            ?.toUpperCase(),\n          userType: window.localStorage.getItem(\"organisation_group_id\"),\n          imagSrc:\n            \"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&h=200&q=80\",\n          imgSrc:\n            \"https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9\",\n        }}\n      />\n      <Box ml={{ base: 0, md: 60 }}>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx={8} justifyContent=\"space-between\">\n        <Link as={ReactLink} to=\"/\">\n          <Image src=\"/logo.png\" alt=\"Logo\" w={36} />\n        </Link>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem\n          key={link.name}\n          icon={link.icon}\n          linkTo={link.linkTo}\n          onClick={onClose}\n        >\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  linkTo: string | undefined;\n  children: any;\n}\n\nconst NavItem = ({ icon, linkTo, children, ...rest }: NavItemProps) => {\n  return (\n    <Link\n      _activeLink={{\n        color: \"cyan.500\",\n        fontWeight: 700,\n      }}\n      as={RouterNavLink}\n      to={linkTo}\n      style={{ textDecoration: \"none\" }}\n      _focus={{ boxShadow: \"none\" }}\n    >\n      <Flex\n        align=\"center\"\n        borderRadius=\"lg\"\n        p=\"4\"\n        mx=\"4\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </Link>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n  user: any;\n}\n\nconst MobileNav = ({ onOpen, user, ...rest }: MobileProps) => {\n  let navigate = useNavigate();\n\n  function handleLogout() {\n    logOut();\n    navigate(\"/signin\");\n  }\n\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 4 }}\n      height=\"16\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent={{ base: \"space-between\", md: \"flex-end\" }}\n      {...rest}\n    >\n      <IconButton\n        display={{ base: \"flex\", md: \"none\" }}\n        onClick={onOpen}\n        variant=\"outline\"\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Image\n        display={{ base: \"flex\", md: \"none\" }}\n        src=\"/logo.png\"\n        alt=\"Logo\"\n        w={32}\n      />\n      <HStack spacing={{ base: \"0\", md: \"6\" }}>\n        <IconButton\n          size=\"lg\"\n          variant=\"ghost\"\n          aria-label=\"notifications\"\n          icon={<FiBell />}\n        />\n        <ColorModeToggleButton />\n        <Flex alignItems={\"center\"}>\n          <Menu>\n            <MenuButton\n              py={2}\n              transition=\"all 0.3s\"\n              _focus={{ boxShadow: \"none\" }}\n            >\n              <HStack>\n                <Avatar size={\"md\"} src={user.imgSrc} />\n                <VStack\n                  display={{ base: \"none\", md: \"flex\" }}\n                  alignItems=\"flex-start\"\n                  spacing=\"1px\"\n                  ml=\"2\"\n                >\n                  <Text fontSize=\"sm\">{user.username}</Text>\n                  <Text fontSize=\"xs\" color=\"gray.600\">\n                    {user.userType}\n                  </Text>\n                </VStack>\n                <Box display={{ base: \"none\", md: \"flex\" }}>\n                  <FiChevronDown />\n                </Box>\n              </HStack>\n            </MenuButton>\n            <MenuList\n              bg={useColorModeValue(\"white\", \"gray.900\")}\n              borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            >\n              <MenuItem>Profile</MenuItem>\n              {/* <MenuItem>Settings</MenuItem>\n              <MenuItem>Billing</MenuItem> */}\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                Sign out\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Flex>\n      </HStack>\n    </Flex>\n  );\n};\n","export function logOut() {\n  window.localStorage.removeItem(\"authenticated\");\n  window.localStorage.removeItem(\"access_token\");\n  window.localStorage.removeItem(\"username\");\n  window.localStorage.removeItem(\"organisation_group_id\");\n\n  document.cookie = `access_token=; Path=/;`;\n}\n"],"names":["ColorModeToggleButton","props","_useColorMode","useColorMode","colorMode","toggleColorMode","_jsx","Flex","h","justifyContent","alignItems","children","Button","_objectSpread","onClick","_focus","boxShadow","w","BsMoon","BsSun","LinkItems","name","icon","FiHome","linkTo","FaPlusCircle","SiLinkedin","SiTwitter","SiInstagram","SiYoutube","SidebarWithHeader","_ref","_window$localStorage$","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","Box","minH","SidebarContent","display","base","md","Drawer","autoFocus","placement","returnFocusOnClose","onOverlayClick","size","DrawerOverlay","DrawerContent","width","MobileNav","user","username","window","localStorage","getItem","toUpperCase","userType","imagSrc","imgSrc","ml","Outlet","_ref2","rest","_objectWithoutProperties","_excluded","bg","useColorModeValue","borderRight","borderRightColor","pos","mx","Link","as","ReactLink","to","Image","src","alt","CloseButton","map","link","NavItem","_ref3","_excluded2","_activeLink","color","fontWeight","RouterNavLink","style","textDecoration","align","borderRadius","p","role","cursor","_hover","Icon","mr","fontSize","_groupHover","_ref4","_excluded3","navigate","useNavigate","handleLogout","removeItem","document","cookie","px","height","borderBottomWidth","borderBottomColor","IconButton","variant","FiMenu","HStack","spacing","FiBell","Menu","MenuButton","py","transition","Avatar","VStack","Text","FiChevronDown","MenuList","borderColor","MenuItem","MenuDivider"],"sourceRoot":""}