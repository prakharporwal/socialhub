{"version":3,"file":"static/js/myProfilePage.ad83e585.chunk.js","mappings":"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","sources":["components/ui/CustomEditableText/index.tsx","pages/MyProfilePage/index.tsx","utils/logoutUtils.ts"],"sourcesContent":["import {\n  EditablePreview,\n  useColorModeValue,\n  IconButton,\n  Input,\n  useEditableControls,\n  ButtonGroup,\n  Editable,\n  Tooltip,\n  EditableInput,\n} from \"@chakra-ui/react\";\nimport { CheckIcon, CloseIcon } from \"@chakra-ui/icons\";\n\ntype CustomEditableTextProps = {\n  text: string;\n};\nexport default function CustomEditableText({ text }: CustomEditableTextProps) {\n  /* Here's a custom control */\n  function EditableControls(props: any) {\n    const {\n      isEditing,\n      getSubmitButtonProps,\n      getCancelButtonProps,\n      getEditButtonProps,\n    } = useEditableControls();\n\n    return isEditing ? (\n      <ButtonGroup\n        justifyContent=\"end\"\n        size=\"sm\"\n        w={props.w}\n        spacing={2}\n        mt={2}\n      >\n        <IconButton\n          icon={<CheckIcon />}\n          aria-label=\"Submit changes\"\n          {...getSubmitButtonProps()}\n        />\n        <IconButton\n          icon={<CloseIcon boxSize={3} />}\n          aria-label=\"Cancel editing\"\n          {...getCancelButtonProps()}\n        />\n      </ButtonGroup>\n    ) : null;\n  }\n\n  return (\n    <Editable\n      defaultValue={text}\n      isPreviewFocusable={true}\n      selectAllOnFocus={false}\n      w={{ base: 60, md: 72, lg: 96 }}\n    >\n      <Tooltip label=\"Click to edit\" shouldWrapChildren={true}>\n        <EditablePreview\n          pt={2}\n          pb={1}\n          px={4}\n          h={\"32px\"}\n          background={useColorModeValue(\"gray.100\", \"gray.700\")}\n          _hover={{\n            background: useColorModeValue(\"gray.100\", \"gray.700\"),\n          }}\n          w={{ base: 60, md: 72, lg: 96 }}\n          noOfLines={1}\n        />\n      </Tooltip>\n      <Input\n        py={2}\n        px={4}\n        as={EditableInput}\n        whiteSpace={\"nowrap\"}\n        w={{ base: 60, md: 72, lg: 96 }}\n      />\n      <EditableControls w={{ base: 60, md: 72, lg: 96 }} />\n    </Editable>\n  );\n}\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Flex,\n  FormControl,\n  FormLabel,\n  Text,\n} from \"@chakra-ui/react\";\nimport CustomEditableText from \"../../components/ui/CustomEditableText\";\nimport { logOut } from \"../../utils/logoutUtils\";\nimport { useNavigate } from \"react-router\";\n\nconst formLayout = {\n  title: \"Your Profile Details\",\n};\n\nexport default function MyProfilePage() {\n  let navigate = useNavigate();\n\n  function logoutHandler() {\n    logOut();\n    navigate(\"/\");\n  }\n  return (\n    <Box m={2} p={4}>\n      <Card width={\"full\"}>\n        <CardHeader>\n          <Text fontSize={\"xl\"} fontWeight={\"bold\"}>\n            {formLayout.title}\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <FormControl>\n            <Box\n              display={\"flex\"}\n              flexDirection={\"row\"}\n              flexWrap={\"wrap\"}\n              gap={4}\n              width={{ base: \"full\", lg: \"75vw\", xl: \"60vw\" }}\n            >\n              <Flex direction={\"column\"} flex={1} px={4}>\n                <LabelText text={\"Username\"} />\n                <CustomEditableText\n                  text={window.localStorage.getItem(\"current_username\") || \"\"}\n                />\n              </Flex>\n              <Flex direction={\"column\"} flex={1} px={4}>\n                <LabelText text={\"Your Email\"} />\n                {/* TODO: connect email details here */}\n                <CustomEditableText\n                  text={window.localStorage.getItem(\"user_email\") || \"\"}\n                />\n              </Flex>\n            </Box>\n            {/* <Box my={4}>\n              <Flex direction={'column'} flex={1} px={4}>\n                <LabelText text={\"Organisation\"} />\n                <CustomEditableText text={\"Sociohub\"} />\n              </Flex>\n            </Box> */}\n            {/* <Box my={4}>\n              <Flex direction={'column'} flex={1} px={4}>\n                <LabelText text={\"Notification Preference\"} />\n                <CustomEditableText text={\"Sociohub\"} />\n              </Flex>\n            </Box> */}\n          </FormControl>\n        </CardBody>\n        <CardFooter pos={\"relative\"} mb={8}>\n          <Flex pos=\"absolute\" right={32} top={0} gap={8}>\n            <Button variant={\"ghost\"} colorScheme=\"blue\">\n              Update Details\n            </Button>\n            <Button variant={\"outline\"} onClick={logoutHandler}>\n              Logout\n            </Button>\n          </Flex>\n        </CardFooter>\n      </Card>\n    </Box>\n  );\n}\n\nconst LabelText = ({ text }: { text: string }) => {\n  return (\n    <FormLabel\n      pt={2}\n      pl={2}\n      fontWeight={\"bold\"}\n      display={\"grid\"}\n      placeItems={\"start\"}\n      whiteSpace={\"nowrap\"}\n      w={{ base: 28, md: 32 }}\n    >\n      {text} {\":\"}\n    </FormLabel>\n  );\n};\n","export function logOut() {\n  window.localStorage.removeItem(\"authenticated\");\n  window.localStorage.removeItem(\"access_token\");\n  window.localStorage.removeItem(\"username\");\n  window.localStorage.removeItem(\"organisation_group_id\");\n\n  document.cookie = `access_token=; Path=/;`;\n}\n"],"names":["CustomEditableText","_ref","text","EditableControls","props","_useEditableControls","useEditableControls","isEditing","getSubmitButtonProps","getCancelButtonProps","getEditButtonProps","_jsxs","ButtonGroup","justifyContent","size","w","spacing","mt","children","_jsx","IconButton","_objectSpread","icon","CheckIcon","CloseIcon","boxSize","Editable","defaultValue","isPreviewFocusable","selectAllOnFocus","base","md","lg","Tooltip","label","shouldWrapChildren","EditablePreview","pt","pb","px","h","background","useColorModeValue","_hover","noOfLines","Input","py","as","EditableInput","whiteSpace","formLayout","title","MyProfilePage","navigate","useNavigate","Box","m","p","Card","width","CardHeader","Text","fontSize","fontWeight","CardBody","FormControl","display","flexDirection","flexWrap","gap","xl","Flex","direction","flex","LabelText","window","localStorage","getItem","CardFooter","pos","mb","right","top","Button","variant","colorScheme","onClick","logOut","FormLabel","pl","placeItems","removeItem","document","cookie"],"sourceRoot":""}