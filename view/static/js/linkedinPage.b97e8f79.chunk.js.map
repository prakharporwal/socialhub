{"version":3,"file":"static/js/linkedinPage.b97e8f79.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/buttons/ConnectLinkedinAccountButton.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","pages/LinkedinPage.tsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-3V5HNFOM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import { Button, Center, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SiLinkedin } from \"react-icons/si\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport CONSTANTS from \"../../EnvConstant\";\n\nconst ConnectLinkedinAccountButton: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [urn, setUrn] = useState(\"\");\n  const auth = useAuth();\n\n  const [isAccountConnected, setIsAccountConnected] = useState(false);\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/account/info\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n\n        throw new Error(\"Failed to get linkedin account info!\");\n      })\n      .then((body) => {\n        if (body.account?.urn !== undefined && body.account?.urn !== \"\") {\n          setUrn(body.account?.urn);\n          setIsAccountConnected(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  async function handleConnectLinkedinAccount() {\n    if (isAccountConnected) return;\n    setIsSubmitting(true);\n\n    await fetch(\n      CONSTANTS.api_server_url + \"/api/p/linkedin/oauth/access/initiate\",\n      {\n        method: \"get\",\n        headers: {\n          \"access-token\": auth.accessToken || \"\",\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"\");\n      })\n      .then((data) => {\n        console.log(\"data\", data);\n        window.location.replace(data.redirect_uri);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <Button\n      variant={isAccountConnected ? \"outline\" : \"solid\"}\n      colorScheme={\"linkedin\"}\n      w={\"full\"}\n      maxW={\"md\"}\n      leftIcon={<SiLinkedin />}\n      isLoading={isSubmitting}\n      loadingText=\"Connecting\"\n      onClick={handleConnectLinkedinAccount}\n    >\n      <Center>\n        <Text>\n          {isAccountConnected ? urn.split(\":\")[3] : \"Connect Linkedin Account\"}\n        </Text>\n      </Center>\n    </Button>\n  );\n};\n\nexport default ConnectLinkedinAccountButton;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport ConnectLinkedinAccountButton from \"../components/buttons/ConnectLinkedinAccountButton\";\n\nconst LinkedinPage: React.FunctionComponent<any> = (props) => {\n  return (\n    <Box h=\"80vh\">\n      <Flex\n        direction={\"column\"}\n        align=\"center\"\n        justify={\"center\"}\n        h=\"100%\"\n        gap={\"8\"}\n      >\n        <ConnectLinkedinAccountButton />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default withAuthenticationRequired(LinkedinPage);\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["api_server_url","props","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","_useState3","_useState4","urn","setUrn","auth","useAuth","_useState5","_useState6","isAccountConnected","setIsAccountConnected","_handleConnectLinkedinAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","fetch","CONSTANTS","method","headers","accessToken","then","res","ok","json","Error","data","console","log","window","location","replace","redirect_uri","catch","err","finally","stop","apply","arguments","useEffect","body","_body$account","_body$account2","_body$account3","undefined","account","_jsx","Button","variant","colorScheme","w","maxW","leftIcon","SiLinkedin","isLoading","loadingText","onClick","children","Center","Text","split","Ele","authValue","Box","h","overflowY","isAuthenticated","_objectSpread","Navigate","to","tokenFromStorage","useMemo","name","nameLenPlus","length","document","cookie","map","c","trim","filter","substring","concat","decodeURIComponent","getCookie","withAuthenticationRequired","Flex","direction","align","justify","gap","ConnectLinkedinAccountButton","_createContext","createContext","strict","_createContext2","useButtonGroup","ButtonIcon","className","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","spacing","_props$children","Spinner","color","width","height","__css","marginProp","spinnerStyles","_objectSpread2","alignItems","position","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isActive","rightIcon","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","value","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","baseStyle","centerStyles","horizontal","insetStart","transform","vertical","top","both","_props$axis","axis","Square","size","_props$centerContent","centerContent","boxSize","flexGrow","_excluded2","borderRadius","basis","grow","shrink","flexDirection","flexWrap","flexBasis","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","object","clone","Object","assign","key","mergeRefs","_len","refs","Array","_key","forEach","current","error","assignRef","_len2","_key2"],"sourceRoot":""}