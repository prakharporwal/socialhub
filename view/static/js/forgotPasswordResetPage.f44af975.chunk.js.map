{"version":3,"file":"static/js/forgotPasswordResetPage.f44af975.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","hooks/useQuery.tsx","../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs","pages/ForgotPasswordResetPage/index.tsx","pages/ForgotPasswordResetPage/ForgotPasswordResetPage.tsx","../node_modules/@chakra-ui/button/dist/chunk-3HSDMH4Y.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6FWJQRCB.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  CardBody,\n  Link,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"md\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Heading as={\"h1\"}>Sociohub</Heading>\n      <h2>Control across all your socials</h2>\n      <Image\n        src=\"/onboarding-poster.webp\"\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","// A custom hook that builds on useLocation to parse\n\nimport { useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\n\n// the query string for you.\nfunction useQuery() {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport { useQuery };\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n","import ForgotPasswordResetPage from \"./ForgotPasswordResetPage\";\n\nexport default ForgotPasswordResetPage;\n","import { FormEvent, useMemo, useState } from \"react\";\nimport FormContainer from \"../../components/FormContainer\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport CONSTANTS from \"../../EnvConstant\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useQuery } from \"../../hooks/useQuery\";\n\nconst ForgotPasswordResetPage = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const token = useQuery().get(\"token\");\n  const toast = useToast();\n\n  function handleFormSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    if (newPassword.localeCompare(confirmPassword) !== 0) {\n      toast({\n        id: \"password-reset\",\n        title: \"Password do not match!\",\n        status: \"error\",\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/password/forgot/reset\", {\n      method: \"POST\",\n      body: JSON.stringify({ new_password: newPassword, token: token }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"api call failed ! \" + res.status);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          id: \"password-reset\",\n          status: \"success\",\n          title: \"Password Changed!\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <FormContainer headingText=\"Create New Password\">\n      <Box>\n        <form onSubmit={handleFormSubmit}>\n          <FormControl id=\"new-password\" isRequired>\n            <FormLabel>New Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Enter your password\"\n                type={showNewPassword ? \"text\" : \"password\"}\n                value={newPassword}\n                required={true}\n                onChange={(e) => {\n                  setNewPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showNewPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showNewPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowNewPassword(!showNewPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <Spacer h=\"4\"></Spacer>\n          <FormControl id=\"confirm-password\" isRequired>\n            <FormLabel>Confirm Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Confirm your password\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                value={confirmPassword}\n                required={true}\n                onChange={(e) => {\n                  setConfirmPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showConfirmPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showConfirmPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowConfirmPassword(!showConfirmPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n            <Button\n              marginTop={\"4\"}\n              bg={\"blue.400\"}\n              color={\"white\"}\n              _hover={{\n                bg: \"blue.400\",\n              }}\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Update Password\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordResetPage;\n","import {\n  Button\n} from \"./chunk-NAA7TEES.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n","// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n"],"names":["api_server_url","path_prefix","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Heading","as","Image","src","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","fontSize","headingText","Text","color","description","Box","rounded","bg","useColorModeValue","boxShadow","p","useQuery","search","useLocation","useMemo","URLSearchParams","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","InputGroupStylesProvider","useInputGroupStyles","InputGroup","forwardRef","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","rest","_objectWithoutProperties","_excluded","_className","cx","groupStyles","validChildren","getValidChildren","input","field","forEach","child","_a","_b","type","id","paddingStart","height","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","compact","size","variant","cloneElement","Object","assign","jsx","chakra","_objectSpread","__css","width","position","isolation","value","displayName","StyledInputElement","baseStyle","top","zIndex","InputElement","_objectSpread2","_props$placement","placement","attr","elementStyles","_defineProperty","element","InputLeftElement","_excluded2","InputRightElement","_excluded3","_useState","useState","_useState2","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","isSubmitting","setIsSubmitting","_useState7","_useState8","showNewPassword","setShowNewPassword","_useState9","_useState10","showConfirmPassword","setShowConfirmPassword","token","get","toast","useToast","FormContainer","onSubmit","e","preventDefault","localeCompare","fetch","CONSTANTS","method","body","JSON","stringify","new_password","then","res","ok","json","Error","status","data","console","log","title","catch","err","finally","FormControl","isRequired","FormLabel","Input","placeholder","required","onChange","currentTarget","IconButton","tabIndex","icon","FaEye","FaEyeSlash","onClick","Spacer","Button","marginTop","_hover","isLoading","isRound","ariaLabel","_children","isValidElement","focusable","padding","justifySelf","alignSelf"],"sourceRoot":""}