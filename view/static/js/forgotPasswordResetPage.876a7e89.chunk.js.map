{"version":3,"file":"static/js/forgotPasswordResetPage.876a7e89.chunk.js","mappings":"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","sources":["CONSTANTS.ts","components/FormContainer/index.tsx","components/FormContainer/FormContainer.tsx","hooks/useQuery.tsx","../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs","pages/ForgotPasswordResetPage/index.tsx","pages/ForgotPasswordResetPage/ForgotPasswordResetPage.tsx","../node_modules/@chakra-ui/button/dist/chunk-3HSDMH4Y.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6FWJQRCB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.prakhar.works\",\n  },\n};\n\nconst CONSTANTS = Env.lan;\n\nexport default CONSTANTS;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import React, { ReactNode } from \"react\";\nimport { Flex, Box, Stack, Heading, useColorModeValue } from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex\n      className=\"signin-background\"\n      h={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      backgroundColor={\"whitesmoke\"}\n    >\n      <Stack\n        spacing={4}\n        mx={\"auto\"}\n        minW={{ md: \"md\" }}\n        maxW={\"lg\"}\n        py={12}\n        px={6}\n      >\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"3xl\"}>{props.headingText}</Heading>\n          {/* <Text fontSize={\"lg\"} color={\"gray.600\"}>\n            to enjoy all of our cool <Link color={\"blue.400\"}>features</Link>{\" \"}\n          </Text> */}\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n          {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n          <Stack spacing={4}>{props.children}</Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","// A custom hook that builds on useLocation to parse\n\nimport { useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\n\n// the query string for you.\nfunction useQuery() {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport { useQuery };\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n","import ForgotPasswordResetPage from \"./ForgotPasswordResetPage\";\n\nexport default ForgotPasswordResetPage;\n","import { FormEvent, useMemo, useState } from \"react\";\nimport FormContainer from \"../../components/FormContainer\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport CONSTANTS from \"../../CONSTANTS\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useQuery } from \"../../hooks/useQuery\";\n\nconst ForgotPasswordResetPage = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const token = useQuery().get(\"token\");\n  const toast = useToast();\n\n  function handleFormSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    if (newPassword.localeCompare(confirmPassword) !== 0) {\n      toast({\n        id: \"password-reset\",\n        title: \"Password do not match!\",\n        status: \"error\",\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/v1/password/forgot/reset\", {\n      method: \"POST\",\n      body: JSON.stringify({ new_password: newPassword, token: token }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"api call failed ! \" + res.status);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          id: \"password-reset\",\n          status: \"success\",\n          title: \"Password Changed!\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <FormContainer headingText=\"Create New Password\">\n      <Box>\n        <form onSubmit={handleFormSubmit}>\n          <FormControl id=\"new-password\" isRequired>\n            <FormLabel>New Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Enter your password\"\n                type={showNewPassword ? \"text\" : \"password\"}\n                value={newPassword}\n                required={true}\n                onChange={(e) => {\n                  setNewPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showNewPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showNewPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowNewPassword(!showNewPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <Spacer h=\"4\"></Spacer>\n          <FormControl id=\"confirm-password\" isRequired>\n            <FormLabel>Confirm Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Confirm your password\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                value={confirmPassword}\n                required={true}\n                onChange={(e) => {\n                  setConfirmPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showConfirmPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showConfirmPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowConfirmPassword(!showConfirmPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n            <Button\n              marginTop={\"4\"}\n              bg={\"blue.400\"}\n              color={\"white\"}\n              _hover={{\n                bg: \"blue.400\",\n              }}\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Update Password\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordResetPage;\n","import {\n  Button\n} from \"./chunk-NAA7TEES.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n","// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["CONSTANTS","api_server_url","props","_jsx","Flex","className","h","align","justify","backgroundColor","children","_jsxs","Stack","spacing","mx","minW","md","maxW","py","px","Heading","fontSize","headingText","Box","rounded","bg","useColorModeValue","boxShadow","p","useQuery","search","useLocation","useMemo","URLSearchParams","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","InputGroupStylesProvider","useInputGroupStyles","InputGroup","forwardRef","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","rest","_objectWithoutProperties","_excluded","_className","cx","groupStyles","validChildren","getValidChildren","input","field","forEach","child","_a","_b","type","id","paddingStart","height","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","compact","size","variant","cloneElement","Object","assign","jsx","chakra","_objectSpread","__css","width","display","position","isolation","value","displayName","StyledInputElement","baseStyle","alignItems","justifyContent","top","zIndex","InputElement","_objectSpread2","_props$placement","placement","attr","elementStyles","_defineProperty","element","InputLeftElement","_excluded2","InputRightElement","_excluded3","_useState","useState","_useState2","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","isSubmitting","setIsSubmitting","_useState7","_useState8","showNewPassword","setShowNewPassword","_useState9","_useState10","showConfirmPassword","setShowConfirmPassword","token","get","toast","useToast","FormContainer","onSubmit","e","preventDefault","localeCompare","fetch","method","body","JSON","stringify","new_password","then","res","ok","json","Error","status","data","console","log","title","catch","err","finally","FormControl","isRequired","FormLabel","Input","placeholder","required","onChange","currentTarget","IconButton","tabIndex","icon","FaEye","FaEyeSlash","onClick","Spacer","Button","marginTop","color","_hover","isLoading","isRound","ariaLabel","_children","isValidElement","focusable","padding","borderRadius","flex","justifySelf","alignSelf","useStyleConfig","object","clone","key"],"sourceRoot":""}