{"version":3,"file":"static/js/twitterPage.3a3f1f70.chunk.js","mappings":"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","sources":["CONSTANTS.ts","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","pages/TwitterPage.tsx","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs"],"sourcesContent":["const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.prakhar.works\",\n  },\n};\n\nconst CONSTANTS = Env.lan;\n\nexport default CONSTANTS;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Flex,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport CONSTANTS from \"../CONSTANTS\";\nimport { SiTwitter } from \"react-icons/si\";\n\ntype TweetType = {\n  id: string;\n  text: string;\n};\n\nconst TwitterPage: React.FunctionComponent<any> = (props) => {\n  const toast = useToast();\n  const auth = useAuth();\n  let [isSubmitting, setIsSubmitting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [twitterUsername, setTwitterUsername] = useState(\"\");\n  const [tweets, setTweets] = useState<TweetType[]>([\n    {\n      id: \"hello\",\n      text: \"Hi All\",\n    },\n  ]);\n\n  function handleConnectToTwitter(e: React.MouseEvent) {\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        console.log(data);\n        // toast({\n        //     status: \"error\",\n        //     title: \"Could not connect twitter account\"\n        // })\n\n        window.location = data.redirect_url;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to Twitter\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  function handleFetchTweets() {\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/tweets/all\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"failed fetching tweets\");\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {});\n  }\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/account/info\", {\n      method: \"get\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n      })\n      .then((body) => {\n        if (\n          body.account?.username !== undefined &&\n          body.account?.username !== \"\"\n        ) {\n          setIsConnected(true);\n          setTwitterUsername(body.account?.username);\n          console.log(body.account?.username);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Box h=\"20vh\">\n      <Flex\n        direction={\"column\"}\n        align=\"center\"\n        justify={\"center\"}\n        h=\"100%\"\n        gap={\"8\"}\n      >\n        <Button\n          isLoading={isSubmitting}\n          colorScheme={isConnected ? \"green\" : \"twitter\"}\n          leftIcon={<SiTwitter />}\n          loadingText=\"Connecting\"\n          onClick={handleConnectToTwitter}\n        >\n          {isConnected ? `Connected to ${twitterUsername}` : \"Connect Twitter\"}\n        </Button>\n        {/* <Button colorScheme={\"twitter\"} onClick={handleFetchTweets}>\n          Get Tweets Twitter\n        </Button> */}\n      </Flex>\n      <Container>\n        {tweets.map((tweet) => {\n          return <TweetCard key={tweet.id} tweet={tweet}></TweetCard>;\n        })}\n      </Container>\n    </Box>\n  );\n};\n\nconst TweetCard: React.FunctionComponent<any> = ({ tweet }) => {\n  return (\n    <Card p=\"4\">\n      <CardHeader>Tweet by You</CardHeader>\n      <CardBody>{tweet.text}</CardBody>\n    </Card>\n  );\n};\n\nexport default withAuthenticationRequired(TwitterPage);\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-SBZF3S2Z.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["CONSTANTS","api_server_url","Ele","props","authValue","useAuth","_jsx","Box","h","overflowY","children","isAuthenticated","_objectSpread","Navigate","to","replace","tokenFromStorage","useMemo","name","nameLenPlus","length","document","cookie","split","map","c","trim","filter","substring","concat","decodeURIComponent","getCookie","_useState","useState","undefined","_useState2","_slicedToArray","auth","accessToken","TweetCard","_ref","tweet","_jsxs","Card","p","CardHeader","CardBody","text","withAuthenticationRequired","toast","useToast","isSubmitting","setIsSubmitting","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","twitterUsername","setTwitterUsername","_useState7","id","_useState8","tweets","useEffect","fetch","method","headers","then","res","ok","json","body","_body$account","_body$account2","_body$account3","_body$account4","account","username","console","log","catch","err","Flex","direction","align","justify","gap","Button","isLoading","colorScheme","leftIcon","SiTwitter","loadingText","onClick","e","Error","data","window","location","redirect_url","status","title","description","finally","Container","forwardRef","ref","wrap","basis","grow","shrink","rest","_objectWithoutProperties","_excluded","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","__css","displayName","_omitThemingProps","omitThemingProps","className","centerContent","useStyleConfig","cx","options","theme","useChakra","defaultOptions","useToastOptionContext","createToastFn"],"sourceRoot":""}