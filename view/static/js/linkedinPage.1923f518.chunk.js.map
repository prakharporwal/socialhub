{"version":3,"file":"static/js/linkedinPage.1923f518.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/buttons/ConnectLinkedinAccountButton.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","pages/LinkedinPage.tsx","utils/cookieUtils.ts","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import { Button, Center, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SiLinkedin } from \"react-icons/si\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport CONSTANTS from \"../../EnvConstant\";\n\nconst ConnectLinkedinAccountButton: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [urn, setUrn] = useState(\"\");\n  const auth = useAuth();\n\n  const [isAccountConnected, setIsAccountConnected] = useState(false);\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/account/info\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n\n        throw new Error(\"Failed to get linkedin account info!\");\n      })\n      .then((body) => {\n        if (body.account?.urn !== undefined && body.account?.urn !== \"\") {\n          setUrn(body.account?.urn);\n          setIsAccountConnected(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  async function handleConnectLinkedinAccount() {\n    if (isAccountConnected) return;\n    setIsSubmitting(true);\n\n    await fetch(\n      CONSTANTS.api_server_url + \"/api/p/linkedin/oauth/access/initiate\",\n      {\n        method: \"get\",\n        headers: {\n          \"access-token\": auth.accessToken || \"\",\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"\");\n      })\n      .then((data) => {\n        console.log(\"data\", data);\n        window.location.replace(data.redirect_uri);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <Button\n      variant={isAccountConnected ? \"outline\" : \"solid\"}\n      colorScheme={\"linkedin\"}\n      w={\"full\"}\n      maxW={\"md\"}\n      leftIcon={<SiLinkedin />}\n      isLoading={isSubmitting}\n      loadingText=\"Connecting\"\n      onClick={handleConnectLinkedinAccount}\n    >\n      <Center>\n        <Text>\n          {isAccountConnected ? urn.split(\":\")[3] : \"Connect Linkedin Account\"}\n        </Text>\n      </Center>\n    </Button>\n  );\n};\n\nexport default ConnectLinkedinAccountButton;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport ConnectLinkedinAccountButton from \"../components/buttons/ConnectLinkedinAccountButton\";\n\nconst LinkedinPage: React.FunctionComponent<any> = (props) => {\n  return (\n    <Box h=\"80vh\">\n      <Flex\n        direction={\"column\"}\n        align=\"center\"\n        justify={\"center\"}\n        h=\"100%\"\n        gap={\"8\"}\n      >\n        <ConnectLinkedinAccountButton />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default withAuthenticationRequired(LinkedinPage);\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n"],"names":["api_server_url","path_prefix","props","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","_useState3","_useState4","urn","setUrn","auth","useAuth","_useState5","_useState6","isAccountConnected","setIsAccountConnected","_handleConnectLinkedinAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","fetch","CONSTANTS","method","headers","accessToken","then","res","ok","json","Error","data","console","log","window","location","replace","redirect_uri","catch","err","finally","stop","apply","arguments","useEffect","body","_body$account","_body$account2","_body$account3","undefined","account","_jsx","Button","variant","colorScheme","w","maxW","leftIcon","SiLinkedin","isLoading","loadingText","onClick","children","Center","Text","split","Ele","authValue","Box","h","overflowY","isAuthenticated","_objectSpread","Navigate","to","tokenFromStorage","useMemo","getCookie","withAuthenticationRequired","Flex","direction","align","justify","gap","ConnectLinkedinAccountButton","name","nameLenPlus","length","document","cookie","map","c","trim","filter","substring","concat","decodeURIComponent","forwardRef","ref","basis","grow","shrink","rest","_objectWithoutProperties","_excluded","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","__css","displayName"],"sourceRoot":""}