{"version":3,"file":"static/js/67.0495aeaa.chunk.js","mappings":"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","sources":["CONSTANTS.ts","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","components/PostingHistoryList.tsx","components/buttons/ConnectLinkedinAccountButton.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","../node_modules/@chakra-ui/layout/dist/chunk-3V5HNFOM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.prakhar.works\",\n  },\n};\n\nconst CONSTANTS = Env.lan;\n\nexport default CONSTANTS;\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Divider,\n  Flex,\n  Heading,\n  List,\n  ListItem,\n  Text,\n} from \"@chakra-ui/layout\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"@chakra-ui/card\";\nimport { Button, ButtonGroup } from \"@chakra-ui/button\";\nimport { Switch } from \"@chakra-ui/switch\";\nimport { FormLabel } from \"@chakra-ui/form-control\";\nimport { SiLinkedin, SiTwitter } from \"react-icons/si\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport CONSTANTS from \"../CONSTANTS\";\nimport { useColorModeValue } from \"@chakra-ui/react\";\nimport ConnectLinkedinAccountButton from \"./buttons/ConnectLinkedinAccountButton\";\nimport mockData from \"./mockPosts.json\";\nimport LoadingShell from \"./ui/LoadingShell\";\n\ntype LinkedinPost = {\n  author?: string;\n  author_urn?: string;\n  distribution?: any;\n  commentary?: string;\n  visibility?: string;\n  isReshareDisabledByAuthor?: boolean;\n  lifecycleState?: string;\n};\n\ntype Post = {\n  scheduled_post_id: string;\n  account_id?: number;\n  post_json_string: string;\n  post_type: string;\n  status: string;\n  created_by: string;\n  created_at: string;\n};\n\ninterface IProps {\n  posts?: Post[];\n}\n\nconst PostingHistoryList: React.FunctionComponent<IProps> = () => {\n  const auth = useAuth();\n  const [isLoadingPosts, setIsLoadingPosts] = useState<boolean>(false);\n  const [posts, setPosts] = useState<Post[]>(mockData);\n\n  useEffect(() => {\n    setIsLoadingPosts(true);\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/posts/fetchall\", {\n      method: \"GET\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw new Error(\"failed fetching posts!\");\n      })\n      .then((data) => {\n        setPosts(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoadingPosts(false);\n      });\n  }, []);\n\n  return (\n    <Box w=\"100%\" px={4} as={\"div\"}>\n      <Heading color={\"black\"}>Your Posts</Heading>\n      <ConnectLinkedinAccountButton />\n      {isLoadingPosts ? (\n        <LoadingShell />\n      ) : (\n        <List mt={8}>\n          {posts.length > 0 ? (\n            posts.map((item, idx) => {\n              return <PostHistory key={item.scheduled_post_id} post={item} />;\n            })\n          ) : (\n            <Text textAlign={\"center\"}>No Posts</Text>\n          )}\n        </List>\n      )}\n    </Box>\n  );\n};\n\ninterface IPHprops {\n  post: Post;\n}\n\nconst PostHistory: React.FunctionComponent<IPHprops> = ({ post }) => {\n  useEffect(() => {\n    console.log(post);\n  }, []);\n  return (\n    <Card p=\"4\" my=\"4\" w=\"100%\" maxW=\"md\">\n      <CardHeader>\n        <Heading size=\"sm\"></Heading>\n      </CardHeader>\n      <CardBody>\n        <Box\n          bg={useColorModeValue(\"whitesmoke\", \"grey\")}\n          p=\"4\"\n          border={\"1px solid grey\"}\n          borderRadius={\"4px\"}\n        >\n          {JSON.parse(post.post_json_string)?.commentary}\n        </Box>\n      </CardBody>\n      <CardFooter display={\"flex\"} flexDirection={\"column\"}>\n        <Text>{post.scheduled_post_id}</Text>\n        <Text>{post.created_by}</Text>\n        <Text>{post.status}</Text>\n        <Text>\n          {new Date(post.created_at).toLocaleDateString() +\n            \"  \" +\n            new Date(post.created_at).toLocaleTimeString()}\n        </Text>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst _PostHistory: React.FunctionComponent<IPHprops> = ({ post }) => {\n  return (\n    <ListItem w=\"60%\">\n      <Card padding={8} margin={4}>\n        <Heading size=\"xs\" textTransform=\"uppercase\">\n          <Text>{post.scheduled_post_id}</Text>\n        </Heading>\n        <Flex direction={\"column\"}>\n          <CardBody>\n            <Heading size={\"sm\"}>Content</Heading>\n            <Card p={4} bg={\"lightgray\"}>\n              <Text>{JSON.parse(post.post_json_string)?.commentary}</Text>\n            </Card>\n            <Text as=\"b\" display={\"block\"}>\n              {\"post on: \" + post.created_at}\n            </Text>\n            <Text as=\"i\">{\"posted by: \" + post.created_by}</Text>\n            <Text as=\"i\">{\"status: \" + post.status}</Text>\n          </CardBody>\n        </Flex>\n        <Divider />\n        <CardFooter>\n          <ButtonGroup>\n            <Button colorScheme={\"linkedin\"}>Reschedule</Button>\n            <Button variant=\"outline\">Delete</Button>\n          </ButtonGroup>\n        </CardFooter>\n        <ButtonGroup gap=\"8\">\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n            <SiLinkedin /> Linkedin\n          </FormLabel>\n          <Switch id=\"linkedin\" />\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n            <SiTwitter /> Twitter\n          </FormLabel>\n          <Switch id=\"twitter\" />\n        </ButtonGroup>\n      </Card>\n    </ListItem>\n  );\n};\n\nexport default withAuthenticationRequired(PostingHistoryList);\n","import { Button, Center, Text, useToast } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SiGrafana, SiLinkedin } from \"react-icons/si\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport CONSTANTS from \"../../CONSTANTS\";\n\nconst ConnectLinkedinAccountButton: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [urn, setUrn] = useState(\"\");\n\n  const auth = useAuth();\n\n  const [isAccountConnected, setIsAccountConnected] = useState(false);\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/account/info\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n\n        throw new Error(\"Failed to get linkedin account info!\");\n      })\n      .then((body) => {\n        if (body.account?.urn !== undefined && body.account?.urn !== \"\") {\n          setUrn(body.account?.urn);\n          setIsAccountConnected(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  async function handleConnectLinkedinAccount() {\n    setIsSubmitting(true);\n    await fetch(\n      CONSTANTS.api_server_url + \"/api/p/linkedin/oauth/access/initiate\",\n      {\n        method: \"get\",\n        headers: {\n          \"access-token\": auth.accessToken || \"\",\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"\");\n      })\n      .then((data) => {\n        console.log(\"data\", data);\n        window.location.replace(data.redirect_uri);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <Button\n      bg={isAccountConnected ? \"green.500\" : \"blue.400\"}\n      color={\"white\"}\n      _hover={{\n        bg: isAccountConnected ? \"green.500\" : \"blue.500\",\n      }}\n      colorScheme={\"linkedin\"}\n      w={\"full\"}\n      maxW={\"md\"}\n      leftIcon={<SiLinkedin />}\n      isLoading={isSubmitting}\n      loadingText=\"Connecting\"\n      onClick={handleConnectLinkedinAccount}\n    >\n      <Center>\n        <Text>\n          {isAccountConnected\n            ? \"Connected to \" + urn\n            : \"Connect Linkedin Account\"}\n        </Text>\n      </Center>\n    </Button>\n  );\n};\n\nconst ConnectedAccountButton: React.FunctionComponent<any> = (props) => {\n  return <Button></Button>;\n};\n\nexport default ConnectLinkedinAccountButton;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["CONSTANTS","api_server_url","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","_objectWithoutProperties","_excluded","validChildren","getValidChildren","spacingStyle","_defineProperty","mt","jsx","value","chakra","_objectSpread","listStyleType","listStylePosition","role","__css","container","displayName","as","_excluded2","marginStart","_excluded3","item","Icon","icon","CardFooter","className","justify","useCardStyles","cx","display","justifyContent","footer","PostHistory","_ref","_JSON$parse","post","useEffect","console","log","_jsxs","Card","p","my","w","maxW","_jsx","CardHeader","Heading","size","CardBody","Box","bg","useColorModeValue","border","borderRadius","JSON","parse","post_json_string","commentary","flexDirection","Text","scheduled_post_id","created_by","status","Date","created_at","toLocaleDateString","toLocaleTimeString","withAuthenticationRequired","auth","useAuth","_useState","useState","_useState2","isLoadingPosts","setIsLoadingPosts","_useState3","mockData","_useState4","posts","setPosts","fetch","method","headers","accessToken","then","res","ok","json","Error","data","catch","err","finally","px","color","ConnectLinkedinAccountButton","LoadingShell","length","map","idx","textAlign","isSubmitting","setIsSubmitting","urn","setUrn","_useState5","_useState6","isAccountConnected","setIsAccountConnected","_handleConnectLinkedinAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","location","replace","redirect_uri","stop","apply","arguments","body","_body$account","_body$account2","_body$account3","undefined","account","Button","_hover","colorScheme","leftIcon","SiLinkedin","isLoading","loadingText","onClick","Center","Ele","authValue","h","overflowY","isAuthenticated","Navigate","to","tokenFromStorage","useMemo","nameLenPlus","document","cookie","split","c","trim","filter","substring","concat","decodeURIComponent","getCookie","baseStyle","alignItems","centerStyles","horizontal","insetStart","transform","vertical","top","both","_props$axis","axis","position","useStyleConfig","align","decoration","casing","aliasedProps","compact","textDecoration","textTransform","object","clone","Object","assign","key","Children","child","isValidElement"],"sourceRoot":""}