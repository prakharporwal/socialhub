{"version":3,"file":"static/js/forgotPasswordResetPage.a42b7f64.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","hooks/useQuery.tsx","../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs","pages/ForgotPasswordResetPage/ForgotPasswordResetPage.tsx","pages/ForgotPasswordResetPage/index.tsx","../node_modules/@chakra-ui/button/dist/chunk-3HSDMH4Y.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6FWJQRCB.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\nconst CONSTANTS = isProd ? Env.prod : Env.dev;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"sm\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"}>Control across all your socials on</Text>\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"} bg={\"teal.100\"} rounded={\"lg\"} p={2}>one platform</Text>\n      <Image\n        src=\"/onboarding-poster.webp\"\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","// A custom hook that builds on useLocation to parse\n\nimport { useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\n\n// the query string for you.\nfunction useQuery() {\n  const { search } = useLocation();\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport { useQuery };\n","// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n","import { FormEvent, useMemo, useState } from \"react\";\nimport FormContainer from \"../../components/FormContainer\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport CONSTANTS from \"../../EnvConstant\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useQuery } from \"../../hooks/useQuery\";\n\nconst ForgotPasswordResetPage = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const token = useQuery().get(\"token\");\n  const toast = useToast();\n\n  function handleFormSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    if (newPassword.localeCompare(confirmPassword) !== 0) {\n      toast({\n        id: \"password-reset\",\n        title: \"Password do not match!\",\n        status: \"error\",\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/password/forgot/reset\", {\n      method: \"POST\",\n      body: JSON.stringify({ new_password: newPassword, token: token }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"api call failed ! \" + res.status);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          id: \"password-reset\",\n          status: \"success\",\n          title: \"Password Changed!\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <FormContainer headingText=\"Create New Password\">\n      <Box>\n        <form onSubmit={handleFormSubmit}>\n          <FormControl id=\"new-password\" isRequired>\n            <FormLabel>New Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Enter your password\"\n                type={showNewPassword ? \"text\" : \"password\"}\n                value={newPassword}\n                required={true}\n                onChange={(e) => {\n                  setNewPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showNewPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showNewPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowNewPassword(!showNewPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <Spacer h=\"4\"></Spacer>\n          <FormControl id=\"confirm-password\" isRequired>\n            <FormLabel>Confirm Password</FormLabel>\n            <InputGroup>\n              <Input\n                placeholder=\"Confirm your password\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                value={confirmPassword}\n                required={true}\n                onChange={(e) => {\n                  setConfirmPassword(e.currentTarget.value);\n                }}\n              />\n              <InputRightElement>\n                <IconButton\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  aria-label={\n                    showConfirmPassword ? \"Hide password\" : \"Show password\"\n                  }\n                  tabIndex={-1}\n                  icon={showConfirmPassword ? <FaEye /> : <FaEyeSlash />}\n                  onClick={() => {\n                    setShowConfirmPassword(!showConfirmPassword);\n                  }}\n                />\n              </InputRightElement>\n            </InputGroup>\n            <Button\n              marginTop={\"4\"}\n              bg={\"blue.400\"}\n              color={\"white\"}\n              _hover={{\n                bg: \"blue.400\",\n              }}\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Update Password\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordResetPage;\n","import ForgotPasswordResetPage from \"./ForgotPasswordResetPage\";\n\nexport default ForgotPasswordResetPage;\n","import {\n  Button\n} from \"./chunk-NAA7TEES.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n","// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n"],"names":["Env","dev","api_server_url","path_prefix","lan","prod","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Text","fontSize","fontWeight","bg","rounded","p","Image","src","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","Heading","headingText","color","description","Box","useColorModeValue","boxShadow","useQuery","search","useLocation","useMemo","URLSearchParams","InputGroupStylesProvider","useInputGroupStyles","createContext","name","errorMessage","InputGroup","forwardRef","ref","styles","useMultiStyleConfig","className","rest","omitThemingProps","_className","cx","groupStyles","validChildren","getValidChildren","input","field","forEach","child","_a","_b","type","id","paddingStart","height","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","compact","size","variant","cloneElement","Object","assign","jsx","chakra","__css","width","position","isolation","value","displayName","StyledInputElement","baseStyle","top","zIndex","InputElement","placement","elementStyles","element","InputLeftElement","InputRightElement","ForgotPasswordResetPage","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","isSubmitting","setIsSubmitting","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","token","get","toast","useToast","FormContainer","onSubmit","e","preventDefault","localeCompare","fetch","CONSTANTS","method","body","JSON","stringify","new_password","then","res","ok","json","Error","status","data","console","log","title","catch","err","finally","FormControl","isRequired","FormLabel","Input","placeholder","required","onChange","currentTarget","IconButton","tabIndex","icon","FaEye","FaEyeSlash","onClick","Spacer","Button","marginTop","_hover","isLoading","isRound","ariaLabel","_children","isValidElement","focusable","padding","justifySelf","alignSelf"],"sourceRoot":""}