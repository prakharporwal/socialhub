{"version":3,"file":"static/js/forgotPasswordRequest.b21ddda1.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","CONSTANTS.ts","components/FormContainer/index.tsx","components/FormContainer/FormContainer.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","pages/ForgotPasswordPage/index.tsx","pages/ForgotPasswordPage/ForgotPasswordRequestPage.tsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6FWJQRCB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = isProd ? Env.prod : isDev ? Env.dev : Env.lan;\n\nexport default CONSTANTS;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import React, { ReactNode } from \"react\";\nimport { Flex, Box, Stack, Heading, useColorModeValue } from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex\n      className=\"signin-background\"\n      h={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      backgroundColor={\"whitesmoke\"}\n    >\n      <Stack\n        spacing={4}\n        mx={\"auto\"}\n        minW={{ md: \"md\" }}\n        maxW={\"lg\"}\n        py={12}\n        px={6}\n      >\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"3xl\"}>{props.headingText}</Heading>\n          {/* <Text fontSize={\"lg\"} color={\"gray.600\"}>\n            to enjoy all of our cool <Link color={\"blue.400\"}>features</Link>{\" \"}\n          </Text> */}\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n          {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n          <Stack spacing={4}>{props.children}</Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","import ForgotPasswordRequestPage from \"./ForgotPasswordRequestPage\";\nexport default ForgotPasswordRequestPage;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport FormContainer from \"../../components/FormContainer\";\n\nimport CONSTANTS from \"../../CONSTANTS\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst ForgotPasswordRequestPage: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>();\n  const [organisationId, setOrganisationId] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n\n  const toast = useToast();\n  const auth = useAuth();\n\n  const submitForgotPasswordForm = (e: any) => {\n    e.preventDefault();\n\n    console.debug({ userEmail, organisationId });\n\n    if (userEmail === \"\" || organisationId === \"\") {\n      toast({ title: \"Fields cannot be empty!\", status: \"error\" });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/v1/password/forgot/request\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_email: userEmail,\n        organisation_id: organisationId,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(res.statusText);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          status: \"success\",\n          title: \"Sent Reset link to your Email\",\n          duration: 5000,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          status: \"error\",\n          title: \"Failed to initiate request!\",\n          duration: 5000,\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  return (\n    <FormContainer headingText=\"Forgot Password\">\n      <Box>\n        <form onSubmit={submitForgotPasswordForm}>\n          <FormControl id=\"organisation-id\" isRequired>\n            <FormLabel>Organisation Id</FormLabel>\n            <Input\n              type=\"text\"\n              value={organisationId}\n              required={true}\n              onChange={(e) => {\n                setOrganisationId(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          <Spacer h=\"4\"></Spacer>\n          <FormControl id=\"user-email\" isRequired>\n            <FormLabel>User Email</FormLabel>\n            <Input\n              type=\"text\"\n              value={userEmail}\n              required={true}\n              onChange={(e) => {\n                setUserEmail(e.currentTarget.value);\n              }}\n            />\n            <Button\n              marginTop={\"4\"}\n              bg={\"blue.400\"}\n              color={\"white\"}\n              _hover={{\n                bg: \"blue.400\",\n              }}\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Send Reset Link\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordRequestPage;\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["Env","dev","api_server_url","lan","prod","props","_jsx","Flex","className","h","align","justify","backgroundColor","children","_jsxs","Stack","spacing","mx","minW","md","maxW","py","px","Heading","fontSize","headingText","Box","rounded","bg","useColorModeValue","boxShadow","p","useAuth","tokenFromStorage","useMemo","name","nameLenPlus","length","document","cookie","split","map","c","trim","filter","substring","concat","decodeURIComponent","getCookie","_useState","useState","undefined","_useState2","_slicedToArray","auth","isAuthenticated","accessToken","isSubmitting","setIsSubmitting","_useState3","_useState4","organisationId","setOrganisationId","_useState5","_useState6","userEmail","setUserEmail","toast","useToast","FormContainer","onSubmit","e","preventDefault","console","debug","fetch","CONSTANTS","headers","method","body","JSON","stringify","user_email","organisation_id","then","res","ok","json","Error","statusText","data","log","status","title","duration","catch","err","finally","FormControl","id","isRequired","FormLabel","Input","type","value","required","onChange","currentTarget","Spacer","Button","marginTop","color","_hover","isLoading","_createContext","createContext","strict","_createContext2","useButtonGroup","ButtonIcon","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","_props$children","Spinner","width","height","__css","marginProp","spinnerStyles","_objectSpread2","alignItems","position","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Square","size","_props$centerContent","centerContent","boxSize","flexGrow","_excluded2","borderRadius","baseStyle","flex","justifySelf","mergeRefs","_len","arguments","refs","Array","_key","forEach","current","error","assignRef","_len2","_key2","apply"],"sourceRoot":""}