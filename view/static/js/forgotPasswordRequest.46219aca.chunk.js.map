{"version":3,"file":"static/js/forgotPasswordRequest.46219aca.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","hooks/useAuth.tsx","pages/ForgotPasswordPage/index.tsx","pages/ForgotPasswordPage/ForgotPasswordRequestPage.tsx","utils/cookieUtils.ts","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\nconst CONSTANTS = isProd ? Env.prod : Env.dev;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"sm\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"}>Control across all your socials on</Text>\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"} bg={\"teal.100\"} rounded={\"lg\"} p={2}>one platform</Text>\n      <Image\n        src=\"/onboarding-poster.webp\"\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","import ForgotPasswordRequestPage from \"./ForgotPasswordRequestPage\";\nexport default ForgotPasswordRequestPage;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n  useToast,\n} from \"@chakra-ui/react\";\nimport FormContainer from \"../../components/FormContainer\";\n\nimport CONSTANTS from \"../../EnvConstant\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst ForgotPasswordRequestPage: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>();\n  const [organisationId, setOrganisationId] = useState<string>(\"\");\n  const [userEmail, setUserEmail] = useState<string>(\"\");\n\n  const toast = useToast();\n  const auth = useAuth();\n\n  const submitForgotPasswordForm = (e: any) => {\n    e.preventDefault();\n\n    console.debug({ userEmail, organisationId });\n\n    if (userEmail === \"\") {\n      toast({ title: \"Fields cannot be empty!\", status: \"error\" });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/password/forgot/request\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_email: userEmail,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        throw new Error(res.statusText);\n      })\n      .then((data) => {\n        console.log(data);\n        toast({\n          status: \"success\",\n          title: \"Sent Reset link to your Email\",\n          duration: 5000,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          status: \"error\",\n          title: \"Failed to submit request!\",\n          duration: 5000,\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  return (\n    <FormContainer headingText=\"Forgot Password\">\n      <Box>\n        <form onSubmit={submitForgotPasswordForm}>\n          {/* <FormControl id=\"organisation-id\" isRequired>\n            <FormLabel>Organisation Id</FormLabel>\n            <Input\n              type=\"text\"\n              value={organisationId}\n              required={true}\n              onChange={(e) => {\n                setOrganisationId(e.currentTarget.value);\n              }}\n            />\n          </FormControl> */}\n          <FormControl id=\"user-email\" isRequired>\n            <FormLabel>Enter your registered Email</FormLabel>\n            <Input\n              type=\"email\"\n              value={userEmail}\n              required={true}\n              onChange={(e) => {\n                setUserEmail(e.currentTarget.value);\n              }}\n            />\n            <Box h={4}></Box>\n            <Button\n              type=\"submit\"\n              isLoading={isSubmitting}\n            >\n              Send Reset Link\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordRequestPage;\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  const cookieData = document.cookie\n    .split(\";\")\n    .map((c) => c.trim())\n    .filter((cookie) => {\n      return cookie.substring(0, nameLenPlus) === `${name}=`;\n    })\n    .map((cookie) => {\n      return decodeURIComponent(cookie.substring(nameLenPlus));\n    })[0];\n\n  console.log(cookieData);\n\n  return cookieData || null;\n}\n\nexport { getCookie };\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["Env","dev","api_server_url","path_prefix","lan","prod","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Text","fontSize","fontWeight","bg","rounded","p","Image","src","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","Heading","headingText","color","description","Box","useColorModeValue","boxShadow","useAuth","tokenFromStorage","useMemo","getCookie","_useState","useState","undefined","_useState2","_slicedToArray","auth","isAuthenticated","accessToken","isSubmitting","setIsSubmitting","_useState3","_useState4","organisationId","_useState5","_useState6","userEmail","setUserEmail","toast","useToast","FormContainer","onSubmit","e","preventDefault","console","debug","fetch","CONSTANTS","headers","method","body","JSON","stringify","user_email","then","res","ok","json","Error","statusText","data","log","status","title","duration","catch","err","finally","FormControl","id","isRequired","FormLabel","Input","type","value","required","onChange","currentTarget","Button","isLoading","name","nameLenPlus","length","cookieData","document","cookie","split","map","c","trim","filter","substring","concat","decodeURIComponent","_createContext","createContext","strict","_createContext2","ButtonGroupProvider","useButtonGroup","ButtonIcon","className","rest","_objectWithoutProperties","_excluded","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","_objectSpread","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","_props$spacing","_props$children","Spinner","width","height","__css","marginProp","spinnerStyles","_objectSpread2","position","_defineProperty","forwardRef","ref","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isDisabled","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","spinner","_omitThemingProps$spi","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Square","size","_props$centerContent","centerContent","boxSize","flexGrow","_excluded2","mergeRefs","_len","arguments","refs","Array","_key","forEach","current","error","assignRef","_len2","_key2","apply"],"sourceRoot":""}