{"version":3,"file":"static/js/postViewPage.b621804d.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","pages/PostViewPage/index.tsx","pages/PostViewPage/PostViewPage.tsx","utils/APIUtils/index.ts","utils/cookieUtils.ts"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\nconst CONSTANTS = isProd ? Env.prod : Env.dev;\nexport default CONSTANTS;\n","import { PostViewPage } from \"./PostViewPage\";\nexport default PostViewPage","import { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport ApiCaller from \"src/utils/APIUtils\";\n\nexport function PostViewPage() {\n  const { postId } = useParams();\n\n  useEffect(()=>{\n    ApiCaller.get(`/p/v1/posts/${postId}`).then((res) => {\n        console.log(res);\n    })\n  },[postId])\n  return <div>{postId}</div>\n}\n","import CONSTANTS from \"src/EnvConstant\";\nimport { getCookie } from \"../cookieUtils\";\n\nclass ApiCallerUtil {\n  private apiHostname: string;\n  constructor() {\n    this.apiHostname = CONSTANTS.api_server_url.concat(CONSTANTS.path_prefix ?? \"\");\n  }\n  \n  getCommonHeaders() {\n    return {\n    \"content-type\": \"application/json\",\n    \"access-token\": getCookie('access_token') || \"no token found!\",\n    }\n  };\n\n  async get(path: string, options?: RequestInit): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(this.apiHostname.concat(path), {\n        headers: {\n          ...this.getCommonHeaders(),\n          ...(options && options.headers),\n        },\n        method: \"GET\",\n      })\n        .then(async (res) => {\n          if (res.ok || res.status === 201) {\n            return res.json();\n          }\n          let resp = await res.json();\n\n          throw new Error(JSON.stringify(resp));\n        })\n        .then((body) => {\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  async post(path: string, body: Record<string, any>, options?: RequestInit): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(this.apiHostname.concat(path), {\n        headers: {\n          ...this.getCommonHeaders(),\n          ...(options && options.headers),\n        },\n        method: \"POST\",\n        body: body && JSON.stringify(body),\n      })\n        .then(async (res) => {\n          if (res.ok || res.status === 201) {\n            return res.json();\n          }\n          let resp = await res.json();\n          throw new Error(JSON.stringify(resp));\n        })\n        .then((body) => {\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  async put(path: string, body: Record<string, any>, options?: RequestInit): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(this.apiHostname.concat(path), {\n        headers: {\n          ...this.getCommonHeaders(),\n          ...(options && options.headers),\n        },\n        method: \"PUT\",\n        body: body && JSON.stringify(body),\n      })\n        .then(async (res) => {\n          if (res.ok || res.status === 201) {\n            return res.json();\n          }\n\n          let resp = {};\n          await res.json().then((body) => {\n            resp = body;\n          });\n\n          throw new Error(JSON.stringify(resp));\n        })\n        .then((body) => {\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  async delete(path: string, options?: RequestInit): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fetch(this.apiHostname.concat(path), {\n        headers: {\n          ...this.getCommonHeaders(),\n          ...(options && options.headers),\n        },\n        method: \"DELETE\",\n      })\n        .then(async (res) => {\n          if (res.ok || res.status === 201) {\n            return res.json();\n          }\n\n          let resp = {};\n          await res.json().then((body) => {\n            resp = body;\n          });\n\n          throw new Error(JSON.stringify(resp));\n        })\n        .then((body) => {\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nconst ApiCaller = new ApiCallerUtil();\n\nconsole.log(\"ApiCaller\", ApiCaller)\nexport default ApiCaller;\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  const cookieData = document.cookie\n    .split(\";\")\n    .map((c) => c.trim())\n    .filter((cookie) => {\n      return cookie.substring(0, nameLenPlus) === `${name}=`;\n    })\n    .map((cookie) => {\n      return decodeURIComponent(cookie.substring(nameLenPlus));\n    })[0];\n\n  return cookieData || null;\n}\n\nexport { getCookie };\n"],"names":["Env","dev","api_server_url","path_prefix","lan","prod","postId","useParams","useEffect","ApiCaller","then","res","console","log","_jsx","children","constructor","_CONSTANTS$path_prefi","apiHostname","this","CONSTANTS","getCommonHeaders","getCookie","async","path","options","Promise","resolve","reject","fetch","concat","headers","method","ok","status","json","resp","Error","JSON","stringify","body","catch","err","name","nameLenPlus","length","document","cookie","split","map","c","trim","filter","substring","decodeURIComponent"],"sourceRoot":""}