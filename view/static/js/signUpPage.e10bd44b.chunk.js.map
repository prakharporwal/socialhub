{"version":3,"file":"static/js/signUpPage.e10bd44b.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortVideoItem/ShortVideoItem.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortVideoItem/index.tsx","pages/ShortsFeedPage/ShortsVideoList/index.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortsVideoList.tsx","pages/ShortsFeedPage/ShortsFeedPage.tsx","pages/ShortsFeedPage/index.tsx","pages/SignUpPage/SignUpPage.tsx","pages/SignUpPage/index.tsx","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\nconst CONSTANTS = isProd ? Env.prod : Env.dev;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\nimport posterImg from \"../../images/onboarding-poster.webp\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"sm\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"}>Control across all your socials on</Text>\n      <Text fontSize={\"lg\"} fontWeight={\"medium\"} bg={\"teal.100\"} rounded={\"lg\"} p={2}>one platform</Text>\n      <Image\n        src={posterImg}\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import { useEffect, useRef, useState, VideoHTMLAttributes } from \"react\";\nimport \"./styles.css\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport interface ShortVideoItemProps\n  extends VideoHTMLAttributes<typeof ShortVideoItem> {\n  nextId: string;\n  channelId?: string;\n  description?: string;\n}\n\nexport const ShortVideoItem = (props: ShortVideoItemProps) => {\n  const { src } = props;\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.4) {\n          if (videoRef.current) {\n            videoRef.current.play().catch((error) => {\n              console.error(\"Playback error:\", error);\n            });\n            setIsPlaying(true);\n            videoRef.current.scrollIntoView();\n          }\n        } else {\n          if (videoRef.current) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n          }\n        }\n      },\n      { threshold: 0.4 }\n    );\n\n    if (videoRef.current) {\n      observer.observe(videoRef.current);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        observer.unobserve(videoRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        background: \"black\",\n        overflowX: \"hidden\",\n        position: \"relative\",\n        overflowY: \"hidden\",\n      }}\n    >\n      <Box\n        id={props.id}\n        width={{ base: \"100%\", md: \"400px\" }}\n        height={{ base: \"100%\", md: \"600px\" }}\n        borderRadius={\"12px\"}\n        onClick={() => {\n          if (isPlaying) {\n            videoRef.current?.pause();\n          } else {\n            videoRef.current?.play().catch((error) => {\n              console.error(\"Playback error:\", error);\n            });\n          }\n          setIsPlaying(!isPlaying);\n        }}\n      >\n        <video\n          ref={videoRef}\n          src={src}\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            objectFit: \"contain\",\n          }}\n          onEnded={() => {\n            console.log(\"Video ended\");\n            const nextVideo = document.getElementById(props.nextId);\n            nextVideo?.scrollIntoView();\n          }}\n        ></video>\n      </Box>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"50px\",\n          color: \"white\",\n          fontSize: \"20px\",\n          fontWeight: \"bold\",\n        }}\n      >\n        {props.channelId}\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"32px\",\n          color: \"white\",\n          fontSize: \"16px\",\n        }}\n      >\n        {props.description}\n      </div>\n    </div>\n  );\n};\n","import { ShortVideoItem } from \"./ShortVideoItem\";\n\nexport default ShortVideoItem;","import { ShortVideoList } from \"./ShortsVideoList\";\n\nexport default ShortVideoList;\n","import { Button } from \"@chakra-ui/react\";\nimport ShortVideoItem from \"./ShortVideoItem\";\nimport { ShortVideoItemProps } from \"./ShortVideoItem/ShortVideoItem\";\nimport { useRef } from \"react\";\n\nexport interface ShortVideoListProps {\n  list: ShortVideoItemProps[];\n}\n\nexport const ShortVideoList = (props: ShortVideoListProps) => {\n  const shortContainerRef = useRef<HTMLDivElement>(null);\n  console.log(\"DEBUGXX\", props.list);\n  if (!props.list) return null;\n  return (\n    <div>\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n          display: \"grid\",\n          placeItems: \"center\",\n          background: \"#23232388\",\n        }}\n      >\n        <Button\n          variant={\"solid\"}\n          title=\"Start\"\n          onClick={() => {\n            if (shortContainerRef.current) {\n              shortContainerRef.current.scrollIntoView({ behavior: \"smooth\" });\n            }\n          }}\n        >\n          Start Shorts\n        </Button>\n      </div>\n      <div id=\"shorts-container\" ref={shortContainerRef}>\n        {props.list.map((item) => {\n          return <ShortVideoItem {...item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport ShortVideoList from \"./ShortsVideoList\";\nimport { ShortVideoListProps } from \"./ShortsVideoList/ShortsVideoList\";\n\nconst list: ShortVideoListProps = {\n  list: [\n    {\n      id: \"video-2\",\n      src: \"/videos/video-2.mp4\",\n      nextId: \"video-3\",\n      channelId: \"RajeshArora\",\n      description: \"Ariana\",\n    },\n    {\n      id: \"video-3\",\n      nextId: \"video-4\",\n      src: \"/videos/video-3.mp4\",\n      description: \"TMKOC\",\n    },\n    {\n      id: \"video-4\",\n      nextId: \"video-5\",\n      src: \"/videos/video-4.mp4\",\n      description: \"Hrithik roshan\",\n    },\n    {\n      id: \"video-5\",\n      nextId: \"video-6\",\n      src: \"/videos/video-5.mp4\",\n      description: \"Hrithik roshan is dancing very good\",\n    },\n    {\n      id: \"video-6\",\n      nextId: \"video-7\",\n      src: \"/videos/video-6.mp4\",\n      description: \"Frontend masters mein people teaching so much\",\n    },\n    {\n      id: \"video-7\",\n      nextId: \"video-8\",\n      src: \"/videos/video-7.mp4\",\n    },\n    {\n      id: \"video-8\",\n      nextId: \"video-9\",\n      src: \"/videos/video-8.mp4\",\n    },\n    {\n      id: \"video-9\",\n      nextId: \"video-2\",\n      src: \"/videos/video-9.mp4\",\n    },\n  ],\n};\n\nexport const ShortsFeedPage: React.FunctionComponent = (props: any) => {\n  const [videoList, setVideoList] = useState(list.list);\n\n  // uncomment on api server is ready\n  //   useEffect(() => {\n  //     fetch(\"http://localhost:1337/api/articles\")\n  //       .then((res) => {\n  //         if (!res.ok) throw new Error();\n  //         return res.json();\n  //       })\n  //       .then((data) => {\n  //         console.log(\"body\", data.data);\n  //         setVideoList(data.data);\n  //       })\n  //       .catch((e) => console.error(e));\n  //   }, []);\n\n  return (\n    <div>\n      <ShortVideoList list={videoList} />\n    </div>\n  );\n};\n","import { ShortsFeedPage } from \"./ShortsFeedPage\";\nexport default ShortsFeedPage;\n","import { FormEvent } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  useToast,\n  Flex,\n  Spacer,\n  Box,\n  Link,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CONSTANTS from \"../../EnvConstant\";\nimport FormContainer from \"../../components/FormContainer\";\nimport { SiGoogle } from \"react-icons/si\";\n\nconst SignUpPage: React.FunctionComponent<any> = (props) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n\n  const [isRegistering, setIsRegistering] = useState<boolean>(false);\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  function submitSignUpForm(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    setIsRegistering(true);\n\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\" ||\n      !validateEmail(email)\n    ) {\n      if (!toast.isActive(\"signup-error\")) {\n        toast({\n          // todo add the username here\n          id: \"signup-error\",\n          title: \"Invalid data cannot be empty\",\n          description: \"Field empty\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n      setIsRegistering(false);\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      if (!toast.isActive(\"password-mismatch\")) {\n        toast({\n          id: \"password-mismatch\",\n          title: \"Passwords don't match\",\n          description: \"Please make sure your passwords match\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n      setIsRegistering(false);\n      return;\n    }\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/signup\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password,\n      }),\n    })\n      .then(async (res) => {\n        const data = await res.json();\n        if (res.ok) {\n          return data;\n        }\n\n        throw new Error(data.message);\n      })\n      .then((data) => {\n        console.log(data.access_token);\n        toast({\n          // todo add the user name here\n          title: \"Account Creation successful\",\n          description: \"\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n\n        if (data?.access_token) {\n          window.localStorage.setItem(\"access_token\", data.access_token);\n          window.localStorage.setItem(\"current_username\", data.username);\n          window.localStorage.setItem(\"current_user_email\", data.user_email);\n          window.localStorage.setItem(\"authenticated\", \"true\");\n          document.cookie = \"access_token=\" + data.access_token;\n        } else {\n          console.error(\"access token is empty or undefined\");\n        }\n        navigate(\"/app/home\");\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          // todo add the user name here\n          title: \"Signup Failed\",\n          description: err.message,\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      })\n      .finally(() => {\n        setIsRegistering(false);\n      });\n  }\n\n  function validateEmail(email: any) {\n    if (email === \"\") return false;\n    return true;\n  }\n\n  // function handleGoogleAuth() {\n  // fetch(CONSTANTS.api_server_url + \"/v1/google/oauth2/signup\")\n  //   .then((res) => res.json())\n  //   .then()\n  //   .catch()\n  //   .finally();\n  // }\n\n  function oauthSignIn() {\n    // Google's OAuth 2.0 endpoint for requesting an access token\n    var oauth2Endpoint = \"https://accounts.google.com/o/oauth2/v2/auth\";\n\n    // Create <form> element to submit parameters to OAuth 2.0 endpoint.\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"method\", \"GET\"); // Send as a GET request.\n    form.setAttribute(\"action\", oauth2Endpoint);\n\n    // Parameters to pass to OAuth 2.0 endpoint.\n    var params: any = {\n      client_id:\n        \"400956389014-h8i654igfoqm53ud0694bhk649kigaur.apps.googleusercontent.com\",\n      redirect_uri: \"http://localhost:8080/v1/google/oauth2/signup/callback\",\n      response_type: \"token\",\n      scope: \"openid email profile\",\n      include_granted_scopes: \"true\",\n      state: \"pass-through value\",\n      prompt: \"select_account\",\n    };\n\n    // Add form parameters as hidden input values.\n    for (var p in params) {\n      var input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"hidden\");\n      input.setAttribute(\"name\", p);\n      input.setAttribute(\"value\", params[p]);\n      form.appendChild(input);\n    }\n\n    // Add form to page and submit it to open the OAuth 2.0 endpoint.\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  return (\n    <FormContainer\n      headingText=\"Create Account\"\n      description={\"Create Account to start managing your posts\"}\n    >\n      <form onSubmit={submitSignUpForm}>\n        <Flex\n          direction={\"column\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          gap={2}\n        >\n          {/* Will use org Id concept later when we have a org */}\n          {/* <FormControl id=\"orgname\">\n            <FormLabel>Organisation Id</FormLabel>\n            <Input\n              type=\"text\"\n              value={organisationId}\n              onChange={(e) => {\n                setOrganisationId(e.currentTarget.value);\n              }}\n            />\n          </FormControl> */}\n          {/* // keeping it as username because chrome picks the email to save from this field id */}\n          <FormControl id=\"username\" isRequired>\n            <FormLabel>Email address</FormLabel>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"name\" isRequired>\n            <FormLabel mt={2}>Username</FormLabel>\n            <Input\n              type=\"text\"\n              value={username}\n              onChange={(e) => {\n                const inputText = e.currentTarget.value;\n                setUsername(inputText.toLowerCase());\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel mt={2}>Password</FormLabel>\n            <Input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"confirm-password\" isRequired>\n            <FormLabel mt={2}>Confirm Password</FormLabel>\n            <Input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => {\n                setConfirmPassword(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          {/* Spacer */}\n          <Box h={4}></Box>\n          <Flex w={\"full\"}>\n            <Button\n              flex={1}\n              colorScheme=\"gray\"\n              type=\"submit\"\n              isLoading={isRegistering}\n            >\n              Sign up\n            </Button>\n          </Flex>\n          <Box py={4} w={\"full\"} textAlign={\"end\"}>\n            <Link as={RouterLink} to=\"/app/signin\" color={\"blue.400\"}>\n              Already have an account ?\n            </Link>\n          </Box>\n        </Flex>\n      </form>\n      {/* <Button leftIcon={<SiGoogle />} onClick={oauthSignIn}>\n        Continue With Google\n      </Button> */}\n    </FormContainer>\n  );\n};\n\nexport default SignUpPage;\n","import SignUpPage from \"./SignUpPage\";\n\nexport default SignUpPage;\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["Env","dev","api_server_url","path_prefix","lan","prod","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Text","fontSize","fontWeight","bg","rounded","p","Image","src","posterImg","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","Heading","headingText","color","description","Box","useColorModeValue","boxShadow","videoRef","useRef","isPlaying","setIsPlaying","useState","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","intersectionRatio","current","play","catch","error","console","scrollIntoView","pause","threshold","observe","unobserve","style","flexDirection","height","width","background","overflowX","position","overflowY","id","onClick","_videoRef$current","_videoRef$current2","ref","objectFit","onEnded","log","nextVideo","document","getElementById","nextId","bottom","channelId","shortContainerRef","list","placeItems","Button","variant","title","behavior","map","item","ShortVideoItem","videoList","setVideoList","ShortVideoList","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isRegistering","setIsRegistering","toast","useToast","navigate","useNavigate","FormContainer","onSubmit","e","preventDefault","validateEmail","isActive","status","duration","isClosable","fetch","CONSTANTS","method","body","JSON","stringify","then","async","data","res","json","ok","Error","message","access_token","window","localStorage","setItem","user_email","cookie","err","finally","FormControl","isRequired","FormLabel","Input","type","value","onChange","currentTarget","mt","inputText","toLowerCase","w","colorScheme","isLoading","textAlign","Link","as","RouterLink","to","ButtonGroupProvider","useButtonGroup","createContext","strict","name","ButtonIcon","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","Spinner","__css","marginProp","spinnerStyles","useMemo","lineHeight","forwardRef","group","styles","useStyleConfig","isDisabled","leftIcon","rightIcon","loadingText","iconSpacing","spinner","spinnerPlacement","omitThemingProps","buttonStyles","_focus","zIndex","appearance","userSelect","whiteSpace","verticalAlign","outline","defaultType","isButton","setIsButton","useCallback","node","tagName","useButtonType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","Square","size","centerContent","boxSize","flexGrow","isExternal","target","rel","mergeRefs","_len","arguments","length","refs","Array","_key","forEach","assignRef","_len2","_key2"],"sourceRoot":""}