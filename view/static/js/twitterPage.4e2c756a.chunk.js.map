{"version":3,"file":"static/js/twitterPage.4e2c756a.chunk.js","mappings":"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","sources":["CONSTANTS.ts","components/buttons/ColorModeToggleButton.tsx","components/SimpleSidebarWithHeader.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","pages/TwitterPage.tsx","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/card/dist/chunk-W3H6TFKV.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs"],"sourcesContent":["const Env = {\n    dev: {\n      api_server_url: \"http://localhost:8080\",\n    },\n    prod: {\n      api_server_url: \"https://api.prakhar.works\",\n    },\n  };\n  \n  const CONSTANTS = Env.prod;\n  \n  export default CONSTANTS;\n  ","import { Button, ButtonProps, Flex, useColorMode } from \"@chakra-ui/react\";\nimport { BsSun, BsMoon } from \"react-icons/bs\";\n\nexport default function ColorModeToggleButton(props: ButtonProps) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    /**\n     * Ideally, only the button component should be used (without Flex).\n     * Props compatible with <Button /> are supported.\n     */\n    <Flex h=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n      <Button\n        aria-label=\"Toggle Color Mode\"\n        onClick={toggleColorMode}\n        _focus={{ boxShadow: \"none\" }}\n        w=\"fit-content\"\n        {...props}\n      >\n        {colorMode === \"light\" ? <BsMoon /> : <BsSun />}\n      </Button>\n    </Flex>\n  );\n}\n","import { ReactNode } from \"react\";\nimport {\n  IconButton,\n  Avatar,\n  Box,\n  CloseButton,\n  Flex,\n  HStack,\n  VStack,\n  Icon,\n  useColorModeValue,\n  Link,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Image,\n  DrawerOverlay,\n  DrawerBody,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\n\nimport {\n  Link as ReactLink,\n  NavLink as RouterNavLink,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport { FiHome, FiMenu, FiBell, FiChevronDown } from \"react-icons/fi\";\nimport { IconType } from \"react-icons\";\nimport ColorModeToggleButton from \"./buttons/ColorModeToggleButton\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport { SiFacebook, SiInstagram, SiLinkedin, SiTwitter } from \"react-icons/si\";\n\ninterface LinkItemProps {\n  name: string;\n  linkTo?: string;\n  icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: FiHome, linkTo: \"/home\" },\n  { name: \"Create Post\", icon: FaPlusCircle, linkTo: \"/post/new\" },\n  { name: \"Linkedin\", icon: SiLinkedin, linkTo: \"/linkedin\" },\n  { name: \"Twitter\", icon: SiTwitter, linkTo: \"/twitter\" },\n  // { name: \"Instagram\", icon: SiInstagram, linkTo: \"/instagram\" },\n  // { name: \"Facebook\", icon: SiFacebook, linkTo: \"/facebook\" },\n];\n\nexport default function SidebarWithHeader({\n  children,\n}: {\n  children?: ReactNode;\n}) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\">\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size={\"xs\"}\n      >\n        <DrawerOverlay />\n        <DrawerContent width={\"100px\"}>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav\n        onOpen={onOpen}\n        user={{\n          username: window.localStorage\n            .getItem(\"current_username\")\n            ?.toUpperCase(),\n          userType: window.localStorage.getItem(\"organisation_group_id\"),\n          imagSrc:\n            \"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&h=200&q=80\",\n          imgSrc:\n            \"https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9\",\n        }}\n      />\n      <Box ml={{ base: 0, md: 60 }}>{children}</Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx={8} justifyContent=\"space-between\">\n        <Link as={ReactLink} to=\"/\">\n          <Image src=\"/logo.png\" alt=\"Logo\" w={36} />\n        </Link>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem key={link.name} icon={link.icon} linkTo={link.linkTo}>\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  linkTo: string | undefined;\n  children: any;\n}\n\nconst NavItem = ({ icon, linkTo, children, ...rest }: NavItemProps) => {\n  return (\n    <Link\n      _activeLink={{\n        color: \"cyan.500\",\n        fontWeight: 700,\n      }}\n      as={RouterNavLink}\n      to={linkTo}\n      style={{ textDecoration: \"none\" }}\n      _focus={{ boxShadow: \"none\" }}\n    >\n      <Flex\n        align=\"center\"\n        borderRadius=\"lg\"\n        p=\"4\"\n        mx=\"4\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </Link>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n  user: any;\n}\n\nconst MobileNav = ({ onOpen, user, ...rest }: MobileProps) => {\n  let navigate = useNavigate();\n\n  function handleLogout() {\n    window.localStorage.removeItem(\"authenticated\");\n    window.localStorage.removeItem(\"access_token\");\n    window.localStorage.removeItem(\"username\");\n    window.localStorage.removeItem(\"organisation_group_id\");\n\n    document.cookie = `access_token=; Path=/;`;\n    navigate(\"/signin\");\n  }\n\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 4 }}\n      height=\"16\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent={{ base: \"space-between\", md: \"flex-end\" }}\n      {...rest}\n    >\n      <IconButton\n        display={{ base: \"flex\", md: \"none\" }}\n        onClick={onOpen}\n        variant=\"outline\"\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n\n      <Image\n        display={{ base: \"flex\", md: \"none\" }}\n        src=\"/logo.png\"\n        alt=\"Logo\"\n        w={32}\n      />\n      <HStack spacing={{ base: \"0\", md: \"6\" }}>\n        <IconButton\n          size=\"lg\"\n          variant=\"ghost\"\n          aria-label=\"notifications\"\n          icon={<FiBell />}\n        />\n        <ColorModeToggleButton />\n        <Flex alignItems={\"center\"}>\n          <Menu>\n            <MenuButton\n              py={2}\n              transition=\"all 0.3s\"\n              _focus={{ boxShadow: \"none\" }}\n            >\n              <HStack>\n                <Avatar size={\"md\"} src={user.imgSrc} />\n                <VStack\n                  display={{ base: \"none\", md: \"flex\" }}\n                  alignItems=\"flex-start\"\n                  spacing=\"1px\"\n                  ml=\"2\"\n                >\n                  <Text fontSize=\"sm\">{user.username}</Text>\n                  <Text fontSize=\"xs\" color=\"gray.600\">\n                    {user.userType}\n                  </Text>\n                </VStack>\n                <Box display={{ base: \"none\", md: \"flex\" }}>\n                  <FiChevronDown />\n                </Box>\n              </HStack>\n            </MenuButton>\n            <MenuList\n              bg={useColorModeValue(\"white\", \"gray.900\")}\n              borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            >\n              <MenuItem>Profile</MenuItem>\n              {/* <MenuItem>Settings</MenuItem>\n              <MenuItem>Billing</MenuItem> */}\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                Sign out\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Flex>\n      </HStack>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport SidebarWithHeader from \"../components/SimpleSidebarWithHeader\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <SidebarWithHeader>\n        <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n          {authValue.isAuthenticated ? (\n            <Ele {...props} />\n          ) : (\n            <Navigate to=\"/signin\" replace />\n          )}\n        </Box>\n      </SidebarWithHeader>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: true,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Container,\n  Flex,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport CONSTANTS from \"../CONSTANTS\";\nimport { SiTwitter } from \"react-icons/si\";\n\ntype TweetType = {\n  id: string;\n  text: string;\n};\n\nconst TwitterPage: React.FunctionComponent<any> = (props) => {\n  const toast = useToast();\n  const auth = useAuth();\n  let [isSubmitting, setIsSubmitting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [twitterUsername, setTwitterUsername] = useState(\"\");\n  const [tweets, setTweets] = useState<TweetType[]>([\n    {\n      id: \"hello\",\n      text: \"Hi All\",\n    },\n  ]);\n\n  function handleConnectToTwitter(e: React.MouseEvent) {\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/app/twitter/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        console.log(data);\n        // toast({\n        //     status: \"error\",\n        //     title: \"Could not connect twitter account\"\n        // })\n\n        window.location = data.redirect_url;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to Twitter\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  function handleFetchTweets() {\n    fetch(CONSTANTS.api_server_url + \"/app/twitter/tweets/all\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"failed fetching tweets\");\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {});\n  }\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/app/twitter/account/info\", {\n      method: \"get\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n      })\n      .then((body) => {\n        if (\n          body.account?.username !== undefined &&\n          body.account?.username !== \"\"\n        ) {\n          setIsConnected(true);\n          setTwitterUsername(body.account?.username);\n          console.log(body.account?.username);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Box h=\"80vh\">\n      <Flex\n        direction={\"column\"}\n        align=\"center\"\n        justify={\"center\"}\n        h=\"100%\"\n        gap={\"8\"}\n      >\n        <Button\n          isLoading={isSubmitting}\n          colorScheme={isConnected ? \"green\" : \"twitter\"}\n          leftIcon={<SiTwitter />}\n          onClick={handleConnectToTwitter}\n        >\n          {isConnected ? `Connected to ${twitterUsername}` : \"Connect Twitter\"}\n        </Button>\n        {/* <Button colorScheme={\"twitter\"} onClick={handleFetchTweets}>\n          Get Tweets Twitter\n        </Button> */}\n      </Flex>\n      <Container>\n        {tweets.map((tweet) => {\n          return <TweetCard tweet={tweet}></TweetCard>;\n        })}\n      </Container>\n    </Box>\n  );\n};\n\nconst TweetCard: React.FunctionComponent<any> = ({ tweet }) => {\n  return (\n    <Card p=\"4\">\n      <CardHeader>Tweet by You</CardHeader>\n      <CardBody>{tweet.text}</CardBody>\n    </Card>\n  );\n};\n\nexport default withAuthenticationRequired(TwitterPage);\n","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-SBZF3S2Z.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["CONSTANTS","api_server_url","ColorModeToggleButton","props","_useColorMode","useColorMode","colorMode","toggleColorMode","_jsx","Flex","h","justifyContent","alignItems","children","Button","_objectSpread","onClick","_focus","boxShadow","w","BsMoon","BsSun","LinkItems","name","icon","FiHome","linkTo","FaPlusCircle","SiLinkedin","SiTwitter","SidebarWithHeader","_ref","_window$localStorage$","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_jsxs","Box","minH","SidebarContent","display","base","md","Drawer","autoFocus","placement","returnFocusOnClose","onOverlayClick","size","DrawerOverlay","DrawerContent","width","MobileNav","user","username","window","localStorage","getItem","toUpperCase","userType","imagSrc","imgSrc","ml","_ref2","rest","_objectWithoutProperties","_excluded","bg","useColorModeValue","borderRight","borderRightColor","pos","mx","Link","as","ReactLink","to","Image","src","alt","CloseButton","map","link","NavItem","_ref3","_excluded2","_activeLink","color","fontWeight","RouterNavLink","style","textDecoration","align","borderRadius","p","role","cursor","_hover","Icon","mr","fontSize","_groupHover","_ref4","_excluded3","navigate","useNavigate","px","height","borderBottomWidth","borderBottomColor","IconButton","variant","FiMenu","HStack","spacing","FiBell","Menu","MenuButton","py","transition","Avatar","VStack","Text","FiChevronDown","MenuList","borderColor","MenuItem","MenuDivider","removeItem","document","cookie","Ele","authValue","useAuth","overflowY","isAuthenticated","Navigate","replace","tokenFromStorage","useMemo","nameLenPlus","length","split","c","trim","filter","substring","concat","decodeURIComponent","getCookie","_useState","useState","undefined","_useState2","_slicedToArray","accessToken","TweetCard","tweet","Card","CardHeader","CardBody","text","withAuthenticationRequired","toast","useToast","auth","isSubmitting","setIsSubmitting","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","twitterUsername","setTwitterUsername","_useState7","id","_useState8","tweets","useEffect","fetch","method","headers","then","res","ok","json","body","_body$account","_body$account2","_body$account3","_body$account4","account","console","log","catch","err","direction","justify","gap","isLoading","colorScheme","leftIcon","e","Error","data","location","redirect_url","status","title","description","finally","Container","_createStylesContext","createStylesContext","_createStylesContext2","CardStylesProvider","useCardStyles","forwardRef","ref","className","styles","jsx","chakra","cx","__css","_omitThemingProps","omitThemingProps","_omitThemingProps$dir","useMultiStyleConfig","flexDirection","position","minWidth","wordWrap","container","value","header","centerContent","useStyleConfig","displayName","options","theme","useChakra","defaultOptions","useToastOptionContext","createToastFn"],"sourceRoot":""}