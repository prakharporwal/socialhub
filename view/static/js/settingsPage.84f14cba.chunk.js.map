{"version":3,"file":"static/js/settingsPage.84f14cba.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/buttons/ConnectLinkedinAccountButton.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","pages/AppSettingsPage/AppCard/index.tsx","pages/AppSettingsPage/AppCard/AppCard.tsx","pages/AppSettingsPage/integratedApps.ts","pages/TwitterPage/ConnectToTwitterButton/ConnectToTwitterButton.tsx","pages/AppSettingsPage/index.tsx","pages/AppSettingsPage/AppSettingsPage.tsx","pages/YoutubePage/ConnectToYoutubeButton/ConnectToYoutubeButton.tsx","utils/cookieUtils.ts","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","../node_modules/@chakra-ui/card/dist/chunk-W3H6TFKV.mjs","../node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import { Button, Center, Text } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SiLinkedin } from \"react-icons/si\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport CONSTANTS from \"../../EnvConstant\";\n\nconst ConnectLinkedinAccountButton: React.FunctionComponent<any> = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [urn, setUrn] = useState(\"\");\n  const auth = useAuth();\n\n  const [isAccountConnected, setIsAccountConnected] = useState(false);\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/account/info\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n\n        throw new Error(\"Failed to get linkedin account info!\");\n      })\n      .then((body) => {\n        if (body.account?.urn !== undefined && body.account?.urn !== \"\") {\n          setUrn(body.account?.urn);\n          setIsAccountConnected(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  async function handleConnectLinkedinAccount() {\n    if (isAccountConnected) return;\n    setIsSubmitting(true);\n\n    await fetch(\n      CONSTANTS.api_server_url + \"/api/p/linkedin/oauth/access/initiate\",\n      {\n        method: \"get\",\n        headers: {\n          \"access-token\": auth.accessToken || \"\",\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"\");\n      })\n      .then((data) => {\n        console.log(\"data\", data);\n        window.location.replace(data.redirect_uri);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  return (\n    <Button\n      variant={isAccountConnected ? \"outline\" : \"solid\"}\n      colorScheme={\"linkedin\"}\n      w={\"full\"}\n      maxW={\"md\"}\n      leftIcon={<SiLinkedin />}\n      isLoading={isSubmitting}\n      loadingText=\"Connecting\"\n      onClick={handleConnectLinkedinAccount}\n    >\n      <Center>\n        <Text>\n          {isAccountConnected ? urn.split(\":\")[3] : \"Connect Linkedin Account\"}\n        </Text>\n      </Center>\n    </Button>\n  );\n};\n\nexport default ConnectLinkedinAccountButton;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","import { AppCard } from \"./AppCard\";\n\nexport default AppCard;\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n} from \"@chakra-ui/react\";\n\nexport function AppCard(props: any) {\n  const Icon = props.icon;\n  const ButtonComponent = props.buttonComponent;\n  return (\n    <Card\n      background={props.bgColor || \"white\"}\n      display={\"flex\"}\n      flexDirection={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n    >\n      <CardHeader>\n        <Text fontSize={\"lg\"} fontWeight={\"600\"}>\n          {props.name}\n        </Text>\n      </CardHeader>\n      <CardBody\n        px={8}\n        display={\"flex\"}\n        flexDirection={\"column\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n      >\n        <Box my={8}>\n          {props.buttonComponent ? (\n            <ButtonComponent />\n          ) : (\n            <Button\n              variant={\"solid\"}\n              colorScheme={props.buttonColorScheme}\n              leftIcon={<Icon />}\n            >\n              {props.buttonText}\n            </Button>\n          )}\n        </Box>\n        <Text>{props.description}</Text>\n      </CardBody>\n      <CardFooter></CardFooter>\n    </Card>\n  );\n}\n","import {\n  SiFacebook,\n  SiInstagram,\n  SiLinkedin,\n  SiTwitter,\n  SiYoutube,\n} from \"react-icons/si\";\nimport { AppDetails } from \"./models\";\nimport ConnectLinkedinAccountButton from \"../../components/buttons/ConnectLinkedinAccountButton\";\nimport { ConnectToYoutubeButton } from \"../YoutubePage/ConnectToYoutubeButton/ConnectToYoutubeButton\";\nimport { ConnectToTwitterButton } from \"../TwitterPage/ConnectToTwitterButton/ConnectToTwitterButton\";\n\nexport const integratedApps: AppDetails[] = [\n  {\n    icon: SiYoutube,\n    name: \"Youtube\",\n    buttonColorScheme: \"red\",\n    buttonText: \"Connect your YouTube\",\n    description: \"Connect your YouTube account to monitor and share videos.\",\n    connected: false,\n    active: true,\n    permission: \"user profile, see, edit, post, videos\",\n    buttonComponent: ConnectToYoutubeButton,\n  },\n  {\n    icon: SiLinkedin,\n    name: \"Linkedin\",\n    buttonColorScheme: \"linkedin\",\n    buttonText: \"Connect your Linkedin\",\n    description: \"Connect your linkedin account to see and manage posts.\",\n    connected: false,\n    active: true,\n    buttonComponent: ConnectLinkedinAccountButton,\n  },\n  {\n    icon: SiInstagram,\n    name: \"Instagram\",\n    buttonColorScheme: \"messenger\",\n    buttonText: \"Connect your Instagram\",\n    description: \"Connect your Instagram account to see and manage photos.\",\n    connected: false,\n    active: true,\n  },\n  {\n    icon: SiTwitter,\n    name: \"Twitter\",\n    buttonColorScheme: \"twitter\",\n    buttonText: \"Connect your Twitter\",\n    description: \"Connect your Twitter account to see and manage posts.\",\n    connected: false,\n    active: true,\n    buttonComponent: ConnectToTwitterButton,\n  },\n  {\n    icon: SiFacebook,\n    name: \"Facebook\",\n    buttonColorScheme: \"facebook\",\n    buttonText: \"Connect your Facebook\",\n    description: \"Connect your Facebook account to see and manage posts.\",\n    connected: false,\n    active: true,\n  },\n];\n","import { Button, useToast } from \"@chakra-ui/react\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useEffect, useState } from \"react\";\nimport CONSTANTS from \"../../../EnvConstant\";\nimport { SiTwitter } from \"react-icons/si\";\n\nexport function ConnectToTwitterButton(props: any) {\n  const toast = useToast();\n  const auth = useAuth();\n  let [isSubmitting, setIsSubmitting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [twitterUsername, setTwitterUsername] = useState(\"\");\n\n  function handleConnectToTwitter(e: React.MouseEvent) {\n    if (isConnected) return;\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        console.log(data);\n        // toast({\n        //     status: \"error\",\n        //     title: \"Could not connect twitter account\"\n        // })\n\n        window.location = data.redirect_url;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to Twitter\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/account/info\", {\n      method: \"get\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n      })\n      .then((body) => {\n        if (\n          body.account?.username !== undefined &&\n          body.account?.username !== \"\"\n        ) {\n          setIsConnected(true);\n          setTwitterUsername(body.account?.username);\n          console.log(body.account?.username);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Button\n      isLoading={isSubmitting}\n      variant={isConnected ? \"outline\" : \"solid\"}\n      colorScheme={\"twitter\"}\n      leftIcon={<SiTwitter />}\n      loadingText=\"Connecting\"\n      onClick={handleConnectToTwitter}\n    >\n      {isConnected ? `${twitterUsername}` : \"Connect Twitter\"}\n    </Button>\n  );\n}\n","import withAuthenticationRequired from \"../../hoc/withAuthenticationRequired\";\nimport { AppSettingsPage } from \"./AppSettingsPage\";\n\nexport default withAuthenticationRequired(AppSettingsPage);\n","import { Box } from \"@chakra-ui/react\";\nimport AppCard from \"./AppCard\";\nimport { integratedApps } from \"./integratedApps\";\n\nfunction AppSettingsPage(props: any) {\n  return (\n    <Box\n      height={\"full\"}\n      overflow={\"auto\"}\n      width={\"100%\"}\n      style={{\n        display: \"grid\",\n        placeItems: \"center\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(350px, 1fr))\",\n        gridGap: 16,\n        padding: 24,\n      }}\n    >\n      {integratedApps.map((app) => (\n        <AppCard {...app} />\n      ))}\n    </Box>\n  );\n}\n\nexport { AppSettingsPage };\n","import { Button, useToast } from \"@chakra-ui/react\";\nimport { SiYoutube } from \"react-icons/si\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useState } from \"react\";\nimport CONSTANTS from \"../../../EnvConstant\";\n\nexport function ConnectToYoutubeButton(props: any) {\n  const toast = useToast();\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const auth = useAuth();\n\n  function handlerConnectToYoutube() {\n    setIsConnecting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/p/youtube/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        window.location.href = data.redirect_uri;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to youtube\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsConnecting(false);\n      });\n  }\n  return (\n    <Button\n      leftIcon={<SiYoutube />}\n      isLoading={isConnecting}\n      colorScheme={\"red\"}\n      loadingText={\"Connecting to Youtube\"}\n      onClick={handlerConnectToYoutube}\n    >\n      Connect to Youtube\n    </Button>\n  );\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-SBZF3S2Z.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["api_server_url","path_prefix","props","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","_useState3","_useState4","urn","setUrn","auth","useAuth","_useState5","_useState6","isAccountConnected","setIsAccountConnected","_handleConnectLinkedinAccount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","fetch","CONSTANTS","method","headers","accessToken","then","res","ok","json","Error","data","console","log","window","location","replace","redirect_uri","catch","err","finally","stop","apply","arguments","useEffect","body","_body$account","_body$account2","_body$account3","undefined","account","_jsx","Button","variant","colorScheme","w","maxW","leftIcon","SiLinkedin","isLoading","loadingText","onClick","children","Center","Text","split","Ele","authValue","Box","h","overflowY","isAuthenticated","_objectSpread","Navigate","to","tokenFromStorage","useMemo","getCookie","Icon","icon","ButtonComponent","buttonComponent","_jsxs","Card","background","bgColor","display","flexDirection","justifyContent","alignItems","CardHeader","fontSize","fontWeight","name","CardBody","px","my","buttonColorScheme","buttonText","description","CardFooter","integratedApps","SiYoutube","connected","active","permission","ConnectToYoutubeButton","ConnectLinkedinAccountButton","SiInstagram","SiTwitter","toast","useToast","isConnected","setIsConnected","twitterUsername","setTwitterUsername","_body$account4","username","e","redirect_url","id","status","title","concat","SiFacebook","withAuthenticationRequired","height","overflow","width","style","placeItems","gridTemplateColumns","gridGap","padding","map","app","AppCard","isConnecting","setIsConnecting","href","nameLenPlus","length","document","cookie","c","trim","filter","substring","decodeURIComponent","_createStylesContext","createStylesContext","_createStylesContext2","CardStylesProvider","useCardStyles","forwardRef","ref","className","rest","_objectWithoutProperties","_excluded","styles","jsx","chakra","cx","__css","_omitThemingProps","omitThemingProps","_omitThemingProps$dir","direction","justify","align","useMultiStyleConfig","position","minWidth","wordWrap","container","value","footer","header","options","theme","useChakra","defaultOptions","useToastOptionContext","createToastFn"],"sourceRoot":""}