{"version":3,"file":"static/js/SidebarWithHeader.2ef3398d.chunk.js","mappings":"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","sources":["components/buttons/ColorModeToggleButton.tsx","components/SimpleSidebarWithHeader.tsx","utils/logoutUtils.ts"],"sourcesContent":["import { Button, ButtonProps, Flex, useColorMode } from \"@chakra-ui/react\";\nimport { BsSun, BsMoon } from \"react-icons/bs\";\n\nexport default function ColorModeToggleButton(props: ButtonProps) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    /**\n     * Ideally, only the button component should be used (without Flex).\n     * Props compatible with <Button /> are supported.\n     */\n    <Flex h=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\n      <Button\n        aria-label=\"Toggle Color Mode\"\n        onClick={toggleColorMode}\n        _focus={{ boxShadow: \"none\" }}\n        w=\"fit-content\"\n        {...props}\n      >\n        {colorMode === \"light\" ? <BsMoon /> : <BsSun />}\n      </Button>\n    </Flex>\n  );\n}\n","import { ReactNode, Suspense } from \"react\";\nimport {\n  IconButton,\n  Avatar,\n  Box,\n  CloseButton,\n  Flex,\n  HStack,\n  VStack,\n  Icon,\n  useColorModeValue,\n  Link,\n  Drawer,\n  DrawerContent,\n  Text,\n  useDisclosure,\n  BoxProps,\n  FlexProps,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Image,\n  DrawerOverlay,\n} from \"@chakra-ui/react\";\n\nimport {\n  Outlet,\n  Link as ReactLink,\n  NavLink as RouterNavLink,\n  useNavigate,\n} from \"react-router-dom\";\n\nimport { FiHome, FiMenu, FiBell, FiChevronDown } from \"react-icons/fi\";\nimport { IconType } from \"react-icons\";\nimport ColorModeToggleButton from \"./buttons/ColorModeToggleButton\";\nimport { FaChartLine, FaPlusCircle } from \"react-icons/fa\";\nimport {\n  SiDash,\n  SiInstagram,\n  SiLinkedin,\n  SiTwitter,\n  SiYoutube,\n} from \"react-icons/si\";\nimport { logOut } from \"../utils/logoutUtils\";\nimport LoadingShell from \"./ui/LoadingShell\";\n\ninterface LinkItemProps {\n  name: string;\n  linkTo?: string;\n  icon: IconType;\n}\nconst LinkItems: Array<LinkItemProps> = [\n  { name: \"Home\", icon: FiHome, linkTo: \"/app/home\" },\n  { name: \"Analytics\", icon: FaChartLine, linkTo: \"/app/analytics/dashboard\" },\n  { name: \"Create Post\", icon: FaPlusCircle, linkTo: \"/app/post/new\" },\n  { name: \"Linkedin\", icon: SiLinkedin, linkTo: \"/app/linkedin\" },\n  { name: \"Twitter\", icon: SiTwitter, linkTo: \"/app/twitter\" },\n  { name: \"Instagram\", icon: SiInstagram, linkTo: \"/app/instagram\" },\n  { name: \"Youtube\", icon: SiYoutube, linkTo: \"/app/youtube\" },\n  // { name: \"Facebook\", icon: SiFacebook, linkTo: \"/facebook\" },\n];\n\nexport default function SidebarWithHeader({\n  children,\n}: {\n  children?: ReactNode;\n}) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\">\n      <SidebarContent\n        onClose={() => onClose}\n        display={{ base: \"none\", md: \"block\" }}\n      />\n      <Drawer\n        autoFocus={false}\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        returnFocusOnClose={false}\n        onOverlayClick={onClose}\n        size={\"xs\"}\n      >\n        <DrawerOverlay />\n        <DrawerContent width={\"100px\"}>\n          <SidebarContent onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav\n        onOpen={onOpen}\n        user={{\n          username: window.localStorage\n            .getItem(\"current_username\")\n            ?.toUpperCase(),\n          userType: window.localStorage.getItem(\"organisation_group_id\"),\n          imagSrc:\n            \"https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&h=200&q=80\",\n          imgSrc:\n            \"https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9\",\n        }}\n      />\n      <Box\n        m={0}\n        p={4}\n        ml={{ base: 0, md: 60 }}\n        bg=\"#F5F5F5\"\n        height={\"calc(100vh - 56px)\"}\n      >\n        <Suspense fallback={<LoadingShell />}>\n          <Outlet />\n        </Suspense>\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n}\n\nconst SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n  return (\n    <Box\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderRight=\"1px\"\n      borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      w={{ base: \"full\", md: 60 }}\n      pos=\"fixed\"\n      h=\"full\"\n      {...rest}\n    >\n      <Flex h=\"20\" alignItems=\"center\" mx={8} justifyContent=\"space-between\">\n        <Link as={ReactLink} to=\"/app\">\n          <Image src=\"/sociohub.png\" alt=\"Logo\" w={36} />\n        </Link>\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link) => (\n        <NavItem\n          key={link.name}\n          icon={link.icon}\n          linkTo={link.linkTo}\n          onClick={onClose}\n        >\n          {link.name}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  icon: IconType;\n  linkTo: string | undefined;\n  children: any;\n}\n\nconst NavItem = ({ icon, linkTo, children, ...rest }: NavItemProps) => {\n  return (\n    <Link\n      _activeLink={{\n        color: \"blue.500\",\n        fontWeight: 700,\n      }}\n      as={RouterNavLink}\n      to={linkTo}\n      style={{ textDecoration: \"none\" }}\n      _focus={{ boxShadow: \"none\" }}\n    >\n      <Flex\n        align=\"center\"\n        borderRadius=\"lg\"\n        p=\"4\"\n        mx=\"4\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"blue.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {icon && (\n          <Icon\n            mr=\"4\"\n            fontSize=\"16\"\n            _groupHover={{\n              color: \"white\",\n            }}\n            as={icon}\n          />\n        )}\n        {children}\n      </Flex>\n    </Link>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n  user: any;\n}\n\nconst MobileNav = ({ onOpen, user, ...rest }: MobileProps) => {\n  let navigate = useNavigate();\n\n  function handleLogout() {\n    logOut();\n    navigate(\"/app/signin\");\n  }\n\n  return (\n    <Flex\n      ml={{ base: 0, md: 60 }}\n      px={{ base: 4, md: 4 }}\n      height=\"16\"\n      alignItems=\"center\"\n      bg={useColorModeValue(\"white\", \"gray.900\")}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n      justifyContent={{ base: \"space-between\", md: \"flex-end\" }}\n      {...rest}\n    >\n      <IconButton\n        display={{ base: \"flex\", md: \"none\" }}\n        onClick={onOpen}\n        variant=\"outline\"\n        aria-label=\"open menu\"\n        icon={<FiMenu />}\n      />\n      <Image\n        display={{ base: \"flex\", md: \"none\" }}\n        src=\"/sociohub.png\"\n        alt=\"Logo\"\n        w={32}\n      />\n      <HStack spacing={{ base: \"0\", md: \"6\" }}>\n        <IconButton\n          size=\"lg\"\n          variant=\"ghost\"\n          aria-label=\"notifications\"\n          icon={<FiBell />}\n        />\n        <ColorModeToggleButton />\n        <Flex alignItems={\"center\"}>\n          <Menu>\n            <MenuButton\n              py={2}\n              transition=\"all 0.3s\"\n              _focus={{ boxShadow: \"none\" }}\n            >\n              <HStack>\n                <Avatar size={\"md\"} src={user.imgSrc} />\n                <VStack\n                  display={{ base: \"none\", md: \"flex\" }}\n                  alignItems=\"flex-start\"\n                  spacing=\"1px\"\n                  ml=\"2\"\n                >\n                  <Text fontSize=\"sm\">{user.username}</Text>\n                  <Text fontSize=\"xs\" color=\"gray.600\">\n                    {user.userType}\n                  </Text>\n                </VStack>\n                <Box display={{ base: \"none\", md: \"flex\" }}>\n                  <FiChevronDown />\n                </Box>\n              </HStack>\n            </MenuButton>\n            <MenuList\n              bg={useColorModeValue(\"white\", \"gray.900\")}\n              borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            >\n              <MenuItem as={ReactLink} to={\"/app/profile\"}>\n                Profile\n              </MenuItem>\n              <MenuItem as={ReactLink} to={\"/app/settings\"}>\n                Settings\n              </MenuItem>\n              {/* <MenuItem>Billing</MenuItem> */}\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                Sign out\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Flex>\n      </HStack>\n    </Flex>\n  );\n};\n","export function logOut() {\n  window.localStorage.removeItem(\"authenticated\");\n  window.localStorage.removeItem(\"access_token\");\n  window.localStorage.removeItem(\"username\");\n  window.localStorage.removeItem(\"organisation_group_id\");\n\n  document.cookie = `access_token=; Path=/;`;\n}\n"],"names":["ColorModeToggleButton","props","colorMode","toggleColorMode","useColorMode","_jsx","Flex","h","justifyContent","alignItems","children","Button","onClick","_focus","boxShadow","w","BsMoon","BsSun","LinkItems","name","icon","FiHome","linkTo","FaChartLine","FaPlusCircle","SiLinkedin","SiTwitter","SiInstagram","SiYoutube","SidebarWithHeader","_ref","_window$localStorage$","isOpen","onOpen","onClose","useDisclosure","_jsxs","Box","minH","SidebarContent","display","base","md","Drawer","autoFocus","placement","returnFocusOnClose","onOverlayClick","size","DrawerOverlay","DrawerContent","width","MobileNav","user","username","window","localStorage","getItem","toUpperCase","userType","imagSrc","imgSrc","m","p","ml","bg","height","Suspense","fallback","LoadingShell","Outlet","_ref2","rest","useColorModeValue","borderRight","borderRightColor","pos","mx","Link","as","ReactLink","to","Image","src","alt","CloseButton","map","link","NavItem","_ref3","_activeLink","color","fontWeight","RouterNavLink","style","textDecoration","align","borderRadius","role","cursor","_hover","Icon","mr","fontSize","_groupHover","_ref4","navigate","useNavigate","px","borderBottomWidth","borderBottomColor","IconButton","variant","FiMenu","HStack","spacing","FiBell","Menu","MenuButton","py","transition","Avatar","VStack","Text","FiChevronDown","MenuList","borderColor","MenuItem","MenuDivider","logOut","removeItem","document","cookie"],"sourceRoot":""}