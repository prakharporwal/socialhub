{"version":3,"file":"static/js/129.b6536ade.chunk.js","mappings":"6IAAO,ICKDA,EDJC,CACHC,eAAgB,yBCIpBC,QAAQC,IAAIH,GACZ,O,gPCHII,GAAiBC,EAAAA,EAAAA,IACnB,SAACC,EAAOC,GACN,IAAIC,EACIC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,UAAWC,EAAuBL,EAAvBK,UAAcC,GAAIC,EAAAA,EAAAA,GAAKP,EAAKQ,GACzD,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAERV,IAAAA,EACAI,WAAWO,EAAAA,EAAAA,IAAG,0BAA2BP,IACtCC,GAAI,IACPO,MAAO,CACLC,QAAS,QACTC,WAAY,SACZC,wBAAyB,QACzBZ,UAA6D,OAAjDF,EAAiB,MAAZC,EAAmBA,EAAWC,GAAqBF,EAAK,OACzEe,UAAW,SACXC,SAAU,UAIlB,I,sDCdFC,GAA4CC,EAAAA,EAAAA,GAAc,CACxDC,KAAM,qBACNC,aAAc,sGACdC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHGM,EAAmBF,EAAA,GAAEG,EAAcH,EAAA,GAIpCI,GAAQ5B,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAM2B,GAASC,EAAAA,EAAAA,IAAoB,QAAS7B,GAC5C8B,GAA6CC,EAAAA,EAAAA,IAAiB/B,GAAtDK,EAASyB,EAATzB,UAAW2B,EAAMF,EAANE,OAAWC,GAAU1B,EAAAA,EAAAA,GAAAuB,EAAAtB,GACxC,OAAuBC,EAAAA,EAAAA,KAAIgB,EAAqB,CAAES,MAAON,EAAQO,UAA0B1B,EAAAA,EAAAA,KACzFC,EAAAA,EAAAA,OAAYC,EAAAA,EAAAA,GAAA,CAEVV,IAAAA,EACAY,OAAKF,EAAAA,EAAAA,GAAA,CAAIyB,YAAaJ,GAAWJ,EAAOS,OACxChC,WAAWO,EAAAA,EAAAA,IAAG,eAAgBP,IAC3B4B,KAGT,IACAN,EAAMW,YAAc,QCpBpB,IAAIC,GAAQxC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAM2B,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOX,GAAK,IAAEC,IAAAA,EAAKY,MAAOe,EAAOY,QAC1E,ICHIC,GAAK1C,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC1B,IAAM2B,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOX,GAAK,IAAEC,IAAAA,EAAKY,MAAOe,EAAOc,KACvE,I,gBCHIC,GAAK5C,EAAAA,EAAAA,IACP,SAAA6C,EAAyB3C,GAAQ,IAA9B4C,EAASD,EAATC,UAAcvC,GAAIC,EAAAA,EAAAA,GAAAqC,EAAApC,GACboB,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEJL,GAAI,IACPL,IAAAA,EACAY,MAAOe,EAAOkB,GACd,kBAAmBD,IAGzB,ICZEE,GAAQhD,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAM2B,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOX,GAAK,IAAEC,IAAAA,EAAKY,MAAOe,EAAOoB,QAC1E,I,gBCHIC,GAAKlD,EAAAA,EAAAA,IACP,SAAA6C,EAAyB3C,GAAQ,IAA9B4C,EAASD,EAATC,UAAcvC,GAAIC,EAAAA,EAAAA,GAAAqC,EAAApC,GACboB,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEJL,GAAI,IACPL,IAAAA,EACAY,MAAOe,EAAOsB,GACd,kBAAmBL,IAGzB,ICZEM,GAAQpD,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IAAM2B,EAASF,IACf,OAAuBjB,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,OAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOX,GAAK,IAAEC,IAAAA,EAAKY,MAAOe,EAAOwB,QAC1E,I,qhCCgNA,GAAeC,EAAAA,EAAAA,IAzK6C,WAC1D,IAAMC,GAAOC,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,MACjBC,GAA4CC,EAAAA,EAAAA,WAAkB,GAAMC,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAA7DG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA0BJ,EAAAA,EAAAA,UAAiBK,GAASC,GAAAzC,EAAAA,EAAAA,GAAAuC,EAAA,GAA7CG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA4BtB,OA1BAG,EAAAA,EAAAA,YAAU,WACRN,GAAkB,GAClBO,MAAM3E,EAAAA,EAAAA,eAA2B,iCAAkC,CACjE4E,OAAQ,MACRC,QAAS,CACP,eAAgBjB,EAAKkB,aAAe,MAGrCC,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAGb,MAAM,IAAIC,MAAM,yBAClB,IACCJ,MAAK,SAACK,GACLX,EAASW,EACX,IACCC,OAAM,SAACC,GACNpF,QAAQC,IAAImF,EACd,IACCC,SAAQ,WACPnB,GAAkB,EACpB,GACJ,GAAG,KAGDoB,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,EAAE,OAAOC,GAAI,EAAGC,GAAI,MAAMnD,SAAA,EAC7BoD,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAO,QAAQtD,SAAC,eACxB0B,GACC0B,EAAAA,EAAAA,KAACG,EAAAA,EAAY,KAEbH,EAAAA,EAAAA,KAACzF,EAAc,CAACsF,EAAG,OAAQC,GAAI,EAAElD,UAC/B+C,EAAAA,EAAAA,MAACvD,EAAK,CAACgE,QAAQ,UAAUC,YAAa,OAAOzD,SAAA,EAC3CoD,EAAAA,EAAAA,KAAChD,EAAK,CAAAJ,UACJ+C,EAAAA,EAAAA,MAACzC,EAAE,CAAAN,SAAA,EACDoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,eACJoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,UACJoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,YACJoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,cACJoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,gBACJoD,EAAAA,EAAAA,KAAC5C,EAAE,CAAAR,SAAC,qBAGRoD,EAAAA,EAAAA,KAACxC,EAAK,CAAC8C,SAAU,KAAK1D,SACnB+B,EAAM4B,KAAI,SAACC,EAAMC,GAAG,OACnBd,EAAAA,EAAAA,MAACzC,EAAE,CAEDwD,QAAS,WACPzC,EAAS,aAAeuC,EAAKG,kBAC/B,EAAE/D,SAAA,EAEFoD,EAAAA,EAAAA,KAACtC,EAAE,CAAAd,SAAE4D,EAAKI,aACVZ,EAAAA,EAAAA,KAACtC,EAAE,CACD/B,SAAU,KACVkF,UAAW,aACXrF,WAAY,WACZX,UAAW,SAAS+B,SAEnBkE,KAAKC,MAAMP,EAAKQ,kBAAkBC,cAErCjB,EAAAA,EAAAA,KAACtC,EAAE,CAAAd,SAAE4D,EAAKU,UACVlB,EAAAA,EAAAA,KAACtC,EAAE,CAAAd,SAAE,MACLoD,EAAAA,EAAAA,KAACtC,EAAE,CAAAd,SAAE4D,EAAKW,cACVnB,EAAAA,EAAAA,KAACtC,EAAE,CAAAd,SAAE4D,EAAKY,eAjBLZ,EAAKG,kBAkBP,OAGTX,EAAAA,EAAAA,KAACpC,EAAK,CACJ0C,SAAU,KACVe,WAAY,OACZC,gBAAiB,iBAAiB1E,UAElCoD,EAAAA,EAAAA,KAAC9C,EAAE,CAAAN,UACDoD,EAAAA,EAAAA,KAACtC,EAAE,CAAC6D,QAAS,EAAE3E,SAAC,uBAQhC,G,uFCrHA,IAfmC,SAAC4E,GAClC,OAAO,SAAU/G,GACf,IAAMgH,GAAYzD,EAAAA,EAAAA,KAClB,OACEgC,EAAAA,EAAAA,KAACJ,EAAAA,GAAG,CAAC8B,EAAG,qBAAsBhG,UAAW,OAAOkB,SAC7C6E,EAAUE,iBACT3B,EAAAA,EAAAA,KAACwB,GAAGpG,EAAAA,EAAAA,GAAA,GAAKX,KAETuF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAQ,CAACC,GAAG,UAAUC,SAAO,KAItC,CACF,C,+ECfO,SAAS9D,IACd,IAAM+D,GAAmBC,EAAAA,EAAAA,UAAQ,kBCFnC,SAAmBlG,GACjB,IAAMmG,EAAcnG,EAAKoG,OAAS,EAClC,OACEC,SAASC,OACNC,MAAM,KACN9B,KAAI,SAAC+B,GAAC,OAAKA,EAAEC,MAAM,IACnBC,QAAO,SAACJ,GACP,OAAOA,EAAOK,UAAU,EAAGR,KAAY,GAAAS,OAAQ5G,EAAI,IACrD,IACCyE,KAAI,SAAC6B,GACJ,OAAOO,mBAAmBP,EAAOK,UAAUR,GAC7C,IAAG,IAAM,IAEf,CDXyCW,CAAU,eAAe,GAAE,IAClEzE,GAAkBC,EAAAA,EAAAA,UACI,MAApB2D,QACuBc,IAArBd,GACqB,KAArBA,GACH1D,GAAApC,EAAAA,EAAAA,GAAAkC,EAAA,GAJMJ,EAAIM,EAAA,GAAGA,EAAA,GAMd,MAAO,CACLsD,gBAAiB5D,EACjBkB,YAAa8C,EAEjB,C,oJETInC,GAAMzE,EAAAA,EAAAA,GAAO,OACjByE,EAAI7C,YAAc,MAClB,IAAI+F,GAAStI,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQqI,EAAwCtI,EAAxCsI,KAAIC,EAAoCvI,EAAlCwI,cAAAA,OAAa,IAAAD,GAAOA,EAAKjI,GAAIC,EAAAA,EAAAA,GAAKP,EAAKQ,GAC/CoB,EAAS4G,EAAgB,CAAE1H,QAAS,OAAQ2H,WAAY,SAAUC,eAAgB,UAAa,CAAC,EACtG,OAAuBjI,EAAAA,EAAAA,KACrB0E,GAAGxE,EAAAA,EAAAA,GAAA,CAEDV,IAAAA,EACA0I,QAASL,EACTzH,OAAKF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAiB,GAAM,IACTgH,WAAY,EACZC,SAAU,KAETvI,GAGT,IACA+H,EAAO/F,YAAc,UACRvC,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQqI,EAAkBtI,EAAlBsI,KAAShI,GAAIC,EAAAA,EAAAA,GAAKP,EAAK8I,GAC/B,OAAuBrI,EAAAA,EAAAA,KAAI4H,GAAM1H,EAAAA,EAAAA,GAAA,CAAI2H,KAAAA,EAAMrI,IAAAA,EAAK8I,aAAc,UAAazI,GAC7E,IACOgC,YAAc,Q,0JCrBjBkD,GAAUzF,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAChD,IAAM2B,GAASoH,EAAAA,EAAAA,IAAe,UAAWhJ,GACzC8B,GAA+BC,EAAAA,EAAAA,IAAiB/B,GAA1BM,GAALwB,EAATzB,WAAkBE,EAAAA,EAAAA,GAAAuB,EAAAtB,IAC1B,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAEPV,IAAAA,EACAI,WAAWO,EAAAA,EAAAA,IAAG,iBAAkBZ,EAAMK,YACnCC,GAAI,IACPO,MAAOe,IAGb,IACA4D,EAAQlD,YAAc,S","sources":["envs/EnvConfig.ts","CONSTANTS.ts","../node_modules/@chakra-ui/table/dist/chunk-7FCBKWFD.mjs","../node_modules/@chakra-ui/table/dist/chunk-B3MS3L3D.mjs","../node_modules/@chakra-ui/table/dist/chunk-DJP6PLAX.mjs","../node_modules/@chakra-ui/table/dist/chunk-L7UVV2ML.mjs","../node_modules/@chakra-ui/table/dist/chunk-Z3IFIKNA.mjs","../node_modules/@chakra-ui/table/dist/chunk-D3HTYHQX.mjs","../node_modules/@chakra-ui/table/dist/chunk-BLRPLYZO.mjs","../node_modules/@chakra-ui/table/dist/chunk-PEV6T2J3.mjs","components/PostingHistoryList.tsx","hoc/withAuthenticationRequired.tsx","hooks/useAuth.tsx","utils/cookieUtils.ts","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.dev;\nconsole.log(CONSTANTS);\nexport default CONSTANTS;\n","// src/table-container.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TableContainer = forwardRef(\n  (props, ref) => {\n    var _a;\n    const { overflow, overflowX, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-table__container\", className),\n        ...rest,\n        __css: {\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: (_a = overflow != null ? overflow : overflowX) != null ? _a : \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\"\n        }\n      }\n    );\n  }\n);\n\nexport {\n  TableContainer\n};\n","// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, layout, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(TableStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.table,\n    {\n      ref,\n      __css: { tableLayout: layout, ...styles.table },\n      className: cx(\"chakra-table\", className),\n      ...tableProps\n    }\n  ) });\n});\nTable.displayName = \"Table\";\n\nexport {\n  useTableStyles,\n  Table\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/thead.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Thead = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.thead, { ...props, ref, __css: styles.thead });\n});\n\nexport {\n  Thead\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tr.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tr = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tr, { ...props, ref, __css: styles.tr });\n});\n\nexport {\n  Tr\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/th.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Th = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.th,\n      {\n        ...rest,\n        ref,\n        __css: styles.th,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Th\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tbody.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tbody = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tbody, { ...props, ref, __css: styles.tbody });\n});\n\nexport {\n  Tbody\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/td.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.td,\n      {\n        ...rest,\n        ref,\n        __css: styles.td,\n        \"data-is-numeric\": isNumeric\n      }\n    );\n  }\n);\n\nexport {\n  Td\n};\n","import {\n  useTableStyles\n} from \"./chunk-B3MS3L3D.mjs\";\n\n// src/tfooter.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tfoot = forwardRef((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ jsx(chakra.tfoot, { ...props, ref, __css: styles.tfoot });\n});\n\nexport {\n  Tfoot\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Divider, Flex, Heading, ListItem, Text } from \"@chakra-ui/layout\";\nimport withAuthenticationRequired from \"../hoc/withAuthenticationRequired\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"@chakra-ui/card\";\nimport { Button, ButtonGroup } from \"@chakra-ui/button\";\nimport { Switch } from \"@chakra-ui/switch\";\nimport { FormLabel } from \"@chakra-ui/form-control\";\nimport { SiLinkedin, SiTwitter } from \"react-icons/si\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport CONSTANTS from \"../CONSTANTS\";\nimport {\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport mockData from \"./mockPosts.json\";\nimport LoadingShell from \"./ui/LoadingShell\";\nimport { useNavigate } from \"react-router\";\n\ntype LinkedinPost = {\n  author?: string;\n  author_urn?: string;\n  distribution?: any;\n  commentary?: string;\n  visibility?: string;\n  isReshareDisabledByAuthor?: boolean;\n  lifecycleState?: string;\n};\n\ntype Post = {\n  scheduled_post_id: string;\n  account_id?: number;\n  post_json_string: string;\n  post_type: string;\n  status: string;\n  created_by: string;\n  created_at: string;\n};\n\ninterface IProps {\n  posts?: Post[];\n}\n\nconst PostingHistoryList: React.FunctionComponent<IProps> = () => {\n  const auth = useAuth();\n  const navigate = useNavigate();\n  const [isLoadingPosts, setIsLoadingPosts] = useState<boolean>(false);\n  const [posts, setPosts] = useState<Post[]>(mockData);\n\n  useEffect(() => {\n    setIsLoadingPosts(true);\n    fetch(CONSTANTS.api_server_url + \"/api/p/linkedin/posts/fetchall\", {\n      method: \"GET\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw new Error(\"failed fetching posts!\");\n      })\n      .then((data) => {\n        setPosts(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoadingPosts(false);\n      });\n  }, []);\n\n  return (\n    <Box w=\"100%\" px={4} as={\"div\"}>\n      <Heading color={\"black\"}>Your Posts</Heading>\n      {isLoadingPosts ? (\n        <LoadingShell />\n      ) : (\n        <TableContainer w={\"100%\"} px={4}>\n          <Table variant=\"striped\" colorScheme={\"gray\"}>\n            <Thead>\n              <Tr>\n                <Th>Post Type</Th>\n                <Th>Post</Th>\n                <Th>Status</Th>\n                <Th>Platform</Th>\n                <Th>Created By</Th>\n                <Th>Created At</Th>\n              </Tr>\n            </Thead>\n            <Tbody fontSize={\"sm\"}>\n              {posts.map((item, idx) => (\n                <Tr\n                  key={item.scheduled_post_id}\n                  onClick={() => {\n                    navigate(\"/app/post/\" + item.scheduled_post_id);\n                  }}\n                >\n                  <Td>{item.post_type}</Td>\n                  <Td\n                    maxWidth={\"64\"}\n                    wordBreak={\"break-word\"}\n                    whiteSpace={\"pre-wrap\"}\n                    overflowX={\"hidden\"}\n                  >\n                    {JSON.parse(item.post_json_string).commentary}\n                  </Td>\n                  <Td>{item.status}</Td>\n                  <Td>{\"\"}</Td>\n                  <Td>{item.created_by}</Td>\n                  <Td>{item.created_at}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n            <Tfoot\n              fontSize={\"xs\"}\n              fontWeight={\"bold\"}\n              backgroundColor={\"InfoBackground\"}\n            >\n              <Tr>\n                <Td colSpan={6}>1 2 3 4</Td>\n              </Tr>\n            </Tfoot>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\ninterface IPHprops {\n  post: Post;\n}\n\nconst PostHistory: React.FunctionComponent<IPHprops> = ({ post }) => {\n  useEffect(() => {\n    console.log(post);\n  }, []);\n  return (\n    <Card p=\"4\" my=\"4\" w=\"100%\" maxW=\"md\">\n      <CardHeader>\n        <Heading size=\"sm\"></Heading>\n      </CardHeader>\n      <CardBody>\n        <Box\n          bg={useColorModeValue(\"whitesmoke\", \"grey\")}\n          p=\"4\"\n          border={\"1px solid grey\"}\n          borderRadius={\"4px\"}\n        >\n          {JSON.parse(post.post_json_string)?.commentary}\n        </Box>\n      </CardBody>\n      <CardFooter display={\"flex\"} flexDirection={\"column\"}>\n        <Text>{post.scheduled_post_id}</Text>\n        <Text>{post.created_by}</Text>\n        <Text>{post.status}</Text>\n        <Text>\n          {new Date(post.created_at).toLocaleDateString() +\n            \"  \" +\n            new Date(post.created_at).toLocaleTimeString()}\n        </Text>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst _PostHistory: React.FunctionComponent<IPHprops> = ({ post }) => {\n  return (\n    <ListItem w=\"60%\">\n      <Card padding={8} margin={4}>\n        <Heading size=\"xs\" textTransform=\"uppercase\">\n          <Text>{post.scheduled_post_id}</Text>\n        </Heading>\n        <Flex direction={\"column\"}>\n          <CardBody>\n            <Heading size={\"sm\"}>Content</Heading>\n            <Card p={4} bg={\"lightgray\"}>\n              <Text>{JSON.parse(post.post_json_string)?.commentary}</Text>\n            </Card>\n            <Text as=\"b\" display={\"block\"}>\n              {\"post on: \" + post.created_at}\n            </Text>\n            <Text as=\"i\">{\"posted by: \" + post.created_by}</Text>\n            <Text as=\"i\">{\"status: \" + post.status}</Text>\n          </CardBody>\n        </Flex>\n        <Divider />\n        <CardFooter>\n          <ButtonGroup>\n            <Button colorScheme={\"linkedin\"}>Reschedule</Button>\n            <Button variant=\"outline\">Delete</Button>\n          </ButtonGroup>\n        </CardFooter>\n        <ButtonGroup gap=\"8\">\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n            <SiLinkedin /> Linkedin\n          </FormLabel>\n          <Switch id=\"linkedin\" />\n          <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n            <SiTwitter /> Twitter\n          </FormLabel>\n          <Switch id=\"twitter\" />\n        </ButtonGroup>\n      </Card>\n    </ListItem>\n  );\n};\n\nexport default withAuthenticationRequired(PostingHistoryList);\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst withAuthenticationRequired = (Ele: React.FunctionComponent<any>) => {\n  return function (props: any) {\n    const authValue = useAuth();\n    return (\n      <Box h={\"calc(100vh - 4rem)\"} overflowY={\"auto\"}>\n        {authValue.isAuthenticated ? (\n          <Ele {...props} />\n        ) : (\n          <Navigate to=\"/signin\" replace />\n        )}\n      </Box>\n    );\n  };\n};\n\nexport default withAuthenticationRequired;\n","import { useMemo, useState } from \"react\";\nimport { getCookie } from \"../utils/cookieUtils\";\n\nexport function useAuth() {\n  const tokenFromStorage = useMemo(() => getCookie(\"access_token\"), []);\n  const [auth, _] = useState<boolean>(\n    tokenFromStorage != null &&\n      tokenFromStorage !== undefined &&\n      tokenFromStorage !== \"\"\n  );\n\n  return {\n    isAuthenticated: auth,\n    accessToken: tokenFromStorage,\n  };\n}\n","// Given a cookie key `name`, returns the value of\n// the cookie or `null`, if the key is not found.\nfunction getCookie(name: string): string | null {\n  const nameLenPlus = name.length + 1;\n  return (\n    document.cookie\n      .split(\";\")\n      .map((c) => c.trim())\n      .filter((cookie) => {\n        return cookie.substring(0, nameLenPlus) === `${name}=`;\n      })\n      .map((cookie) => {\n        return decodeURIComponent(cookie.substring(nameLenPlus));\n      })[0] || null\n  );\n}\n\nexport { getCookie };\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n"],"names":["CONSTANTS","api_server_url","console","log","TableContainer","forwardRef","props","ref","_a","overflow","overflowX","className","rest","_objectWithoutProperties","_excluded","jsx","chakra","_objectSpread","cx","__css","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","_createContext","createContext","name","errorMessage","_createContext2","_slicedToArray","TableStylesProvider","useTableStyles","Table","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","layout","tableProps","value","children","tableLayout","table","displayName","Thead","thead","Tr","tr","Th","_ref","isNumeric","th","Tbody","tbody","Td","td","Tfoot","tfoot","withAuthenticationRequired","auth","useAuth","navigate","useNavigate","_useState","useState","_useState2","isLoadingPosts","setIsLoadingPosts","_useState3","mockData","_useState4","posts","setPosts","useEffect","fetch","method","headers","accessToken","then","res","ok","json","Error","data","catch","err","finally","_jsxs","Box","w","px","as","_jsx","Heading","color","LoadingShell","variant","colorScheme","fontSize","map","item","idx","onClick","scheduled_post_id","post_type","wordBreak","JSON","parse","post_json_string","commentary","status","created_by","created_at","fontWeight","backgroundColor","colSpan","Ele","authValue","h","isAuthenticated","Navigate","to","replace","tokenFromStorage","useMemo","nameLenPlus","length","document","cookie","split","c","trim","filter","substring","concat","decodeURIComponent","getCookie","undefined","Square","size","_props$centerContent","centerContent","alignItems","justifyContent","boxSize","flexShrink","flexGrow","_excluded2","borderRadius","useStyleConfig"],"sourceRoot":""}