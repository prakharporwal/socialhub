{"version":3,"file":"static/js/settingsPage.1950965f.chunk.js","mappings":"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","sources":["pages/AppSettingsPage/AppCard/index.tsx","pages/AppSettingsPage/AppCard/AppCard.tsx","pages/AppSettingsPage/integratedApps.ts","pages/TwitterPage/ConnectToTwitterButton/ConnectToTwitterButton.tsx","pages/AppSettingsPage/index.tsx","pages/AppSettingsPage/AppSettingsPage.tsx","pages/YoutubePage/ConnectToYoutubeButton/ConnectToYoutubeButton.tsx","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","../node_modules/@chakra-ui/card/dist/chunk-W3H6TFKV.mjs","../node_modules/@chakra-ui/toast/dist/chunk-ENIANY67.mjs"],"sourcesContent":["import { AppCard } from \"./AppCard\";\n\nexport default AppCard;\n","import {\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Text,\n} from \"@chakra-ui/react\";\n\nexport function AppCard(props: any) {\n  const Icon = props.icon;\n  const ButtonComponent = props.buttonComponent;\n  return (\n    <Card\n      background={props.bgColor || \"white\"}\n      display={\"flex\"}\n      flexDirection={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n    >\n      <CardHeader>\n        <Text fontSize={\"lg\"} fontWeight={\"600\"}>\n          {props.name}\n        </Text>\n      </CardHeader>\n      <CardBody\n        px={8}\n        display={\"flex\"}\n        flexDirection={\"column\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n      >\n        <Box my={8}>\n          {props.buttonComponent ? (\n            <ButtonComponent />\n          ) : (\n            <Button\n              variant={\"solid\"}\n              colorScheme={props.buttonColorScheme}\n              leftIcon={<Icon />}\n            >\n              {props.buttonText}\n            </Button>\n          )}\n        </Box>\n        <Text>{props.description}</Text>\n      </CardBody>\n      <CardFooter></CardFooter>\n    </Card>\n  );\n}\n","import {\n  SiFacebook,\n  SiInstagram,\n  SiLinkedin,\n  SiTwitter,\n  SiYoutube,\n} from \"react-icons/si\";\nimport { AppDetails } from \"./models\";\nimport ConnectLinkedinAccountButton from \"../../components/buttons/ConnectLinkedinAccountButton\";\nimport { ConnectToYoutubeButton } from \"../YoutubePage/ConnectToYoutubeButton/ConnectToYoutubeButton\";\nimport { ConnectToTwitterButton } from \"../TwitterPage/ConnectToTwitterButton/ConnectToTwitterButton\";\n\nexport const integratedApps: AppDetails[] = [\n  {\n    icon: SiYoutube,\n    name: \"Youtube\",\n    buttonColorScheme: \"red\",\n    buttonText: \"Connect your YouTube\",\n    description: \"Connect your YouTube account to monitor and share videos.\",\n    connected: false,\n    active: true,\n    permission: \"user profile, see, edit, post, videos\",\n    buttonComponent: ConnectToYoutubeButton,\n  },\n  {\n    icon: SiLinkedin,\n    name: \"Linkedin\",\n    buttonColorScheme: \"linkedin\",\n    buttonText: \"Connect your Linkedin\",\n    description: \"Connect your linkedin account to see and manage posts.\",\n    connected: false,\n    active: true,\n    buttonComponent: ConnectLinkedinAccountButton,\n  },\n  {\n    icon: SiInstagram,\n    name: \"Instagram\",\n    buttonColorScheme: \"messenger\",\n    buttonText: \"Connect your Instagram\",\n    description: \"Connect your Instagram account to see and manage photos.\",\n    connected: false,\n    active: true,\n  },\n  {\n    icon: SiTwitter,\n    name: \"Twitter\",\n    buttonColorScheme: \"twitter\",\n    buttonText: \"Connect your Twitter\",\n    description: \"Connect your Twitter account to see and manage posts.\",\n    connected: false,\n    active: true,\n    buttonComponent: ConnectToTwitterButton,\n  },\n  {\n    icon: SiFacebook,\n    name: \"Facebook\",\n    buttonColorScheme: \"facebook\",\n    buttonText: \"Connect your Facebook\",\n    description: \"Connect your Facebook account to see and manage posts.\",\n    connected: false,\n    active: true,\n  },\n];\n","import { Button, useToast } from \"@chakra-ui/react\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useEffect, useState } from \"react\";\nimport CONSTANTS from \"../../../EnvConstant\";\nimport { SiTwitter } from \"react-icons/si\";\n\nexport function ConnectToTwitterButton(props: any) {\n  const toast = useToast();\n  const auth = useAuth();\n  let [isSubmitting, setIsSubmitting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [twitterUsername, setTwitterUsername] = useState(\"\");\n\n  function handleConnectToTwitter(e: React.MouseEvent) {\n    if (isConnected) return;\n    setIsSubmitting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        console.log(data);\n        // toast({\n        //     status: \"error\",\n        //     title: \"Could not connect twitter account\"\n        // })\n\n        window.location = data.redirect_url;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to Twitter\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsSubmitting(false);\n      });\n  }\n\n  useEffect(() => {\n    fetch(CONSTANTS.api_server_url + \"/api/p/twitter/account/info\", {\n      method: \"get\",\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n      })\n      .then((body) => {\n        if (\n          body.account?.username !== undefined &&\n          body.account?.username !== \"\"\n        ) {\n          setIsConnected(true);\n          setTwitterUsername(body.account?.username);\n          console.log(body.account?.username);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Button\n      isLoading={isSubmitting}\n      variant={isConnected ? \"outline\" : \"solid\"}\n      colorScheme={\"twitter\"}\n      leftIcon={<SiTwitter />}\n      loadingText=\"Connecting\"\n      onClick={handleConnectToTwitter}\n    >\n      {isConnected ? `${twitterUsername}` : \"Connect Twitter\"}\n    </Button>\n  );\n}\n","import withAuthenticationRequired from \"../../hoc/withAuthenticationRequired\";\nimport { AppSettingsPage } from \"./AppSettingsPage\";\n\nexport default withAuthenticationRequired(AppSettingsPage);\n","import { Box } from \"@chakra-ui/react\";\nimport AppCard from \"./AppCard\";\nimport { integratedApps } from \"./integratedApps\";\n\nfunction AppSettingsPage(props: any) {\n  return (\n    <Box\n      height={\"full\"}\n      overflow={\"auto\"}\n      width={\"100%\"}\n      style={{\n        display: \"grid\",\n        placeItems: \"center\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(350px, 1fr))\",\n        gridGap: 16,\n        padding: 24,\n      }}\n    >\n      {integratedApps.map((app) => (\n        <AppCard {...app} />\n      ))}\n    </Box>\n  );\n}\n\nexport { AppSettingsPage };\n","import { Button, useToast } from \"@chakra-ui/react\";\nimport { SiYoutube } from \"react-icons/si\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useState } from \"react\";\nimport CONSTANTS from \"../../../EnvConstant\";\n\nexport function ConnectToYoutubeButton(props: any) {\n  const toast = useToast();\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const auth = useAuth();\n\n  function handlerConnectToYoutube() {\n    setIsConnecting(true);\n\n    fetch(CONSTANTS.api_server_url + \"/api/p/youtube/oauth2/access/initiate\", {\n      headers: {\n        \"access-token\": auth.accessToken || \"\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw new Error(\"error initiating connecting to twitter\");\n      })\n      .then((data) => {\n        window.location.href = data.redirect_uri;\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          id: \"post-submit-error\",\n          status: \"error\",\n          title: \"Could not connect to youtube\",\n          description: \"\",\n        });\n      })\n      .finally(() => {\n        setIsConnecting(false);\n      });\n  }\n  return (\n    <Button\n      leftIcon={<SiYoutube />}\n      isLoading={isConnecting}\n      colorScheme={\"red\"}\n      loadingText={\"Connecting to Youtube\"}\n      onClick={handlerConnectToYoutube}\n    >\n      Connect to Youtube\n    </Button>\n  );\n}\n","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-SBZF3S2Z.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-PE6CKLNB.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["props","Icon","icon","ButtonComponent","buttonComponent","_jsxs","Card","background","bgColor","display","flexDirection","justifyContent","alignItems","children","_jsx","CardHeader","Text","fontSize","fontWeight","name","CardBody","px","Box","my","Button","variant","colorScheme","buttonColorScheme","leftIcon","buttonText","description","CardFooter","integratedApps","SiYoutube","connected","active","permission","ConnectToYoutubeButton","SiLinkedin","ConnectLinkedinAccountButton","SiInstagram","SiTwitter","toast","useToast","auth","useAuth","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","_useState3","_useState4","isConnected","setIsConnected","_useState5","_useState6","twitterUsername","setTwitterUsername","useEffect","fetch","CONSTANTS","method","headers","accessToken","then","res","ok","json","body","_body$account","_body$account2","_body$account3","_body$account4","undefined","account","username","console","log","catch","err","isLoading","loadingText","onClick","e","Error","data","window","location","redirect_url","id","status","title","finally","concat","SiFacebook","withAuthenticationRequired","height","overflow","width","style","placeItems","gridTemplateColumns","gridGap","padding","map","app","AppCard","_objectSpread","isConnecting","setIsConnecting","href","redirect_uri","_createStylesContext","createStylesContext","_createStylesContext2","CardStylesProvider","useCardStyles","forwardRef","ref","className","rest","_objectWithoutProperties","_excluded","styles","jsx","chakra","cx","__css","_omitThemingProps","omitThemingProps","_omitThemingProps$dir","direction","justify","align","useMultiStyleConfig","position","minWidth","wordWrap","container","value","footer","header","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn"],"sourceRoot":""}