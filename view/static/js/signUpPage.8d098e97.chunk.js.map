{"version":3,"file":"static/js/signUpPage.8d098e97.chunk.js","mappings":"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","sources":["envs/EnvConfig.ts","EnvConstant.ts","components/FormContainer/FormContainer.tsx","components/FormContainer/index.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortVideoItem/index.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortVideoItem/ShortVideoItem.tsx","pages/ShortsFeedPage/ShortsVideoList/index.tsx","pages/ShortsFeedPage/ShortsVideoList/ShortsVideoList.tsx","pages/ShortsFeedPage/ShortsFeedPage.tsx","pages/ShortsFeedPage/index.tsx","pages/SignUpPage/SignUpPage.tsx","pages/SignUpPage/index.tsx","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs"],"sourcesContent":["export const Env = {\n  dev: {\n    api_server_url: \"http://localhost:8080\",\n    path_prefix: \"/api\",\n  },\n  lan: {\n    api_server_url: \"http://192.168.0.184:8080\",\n    path_prefix: \"/api\",\n  },\n  prod: {\n    api_server_url: \"https://api.sociohub.live\",\n    path_prefix: \"/api\",\n  },\n};\n","import { Env } from \"./envs/EnvConfig\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst CONSTANTS = Env.prod;\nexport default CONSTANTS;\n","import React, { ReactNode } from \"react\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Card,\n  CardHeader,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\ntype IProps = {\n  headingText: string;\n  description?: string;\n  children: ReactNode;\n};\n\nconst FormContainer: React.FunctionComponent<IProps> = (props) => {\n  return (\n    <Flex justifyContent={\"center\"} alignItems={\"center\"}>\n      <AppOverView />\n      <Flex\n        flex={1}\n        h={\"100vh\"}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        backgroundColor={\"whitesmoke\"}\n      >\n        <Stack\n          spacing={4}\n          mx={\"auto\"}\n          minW={{ base: \"sm\", md: \"lg\", lg: \"xl\" }}\n          maxW={\"xl\"}\n          py={12}\n          px={6}\n        >\n          <Card>\n            <CardHeader>\n              <Stack align={\"center\"}>\n                <Heading fontSize={\"2xl\"}>{props.headingText}</Heading>\n                <Text fontSize={\"md\"} color={\"gray.600\"}>\n                  {props.description}\n                </Text>\n              </Stack>\n            </CardHeader>\n            <Box\n              rounded={\"lg\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              boxShadow={\"lg\"}\n              p={8}\n            >\n              {/* // Todo: Form Validate and sanitize input for xss and sql injection  */}\n              <Stack spacing={4}>{props.children}</Stack>\n            </Box>\n          </Card>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n\nconst AppOverView = () => {\n  return (\n    <Flex\n      display={{ base: \"none\", md: \"flex\" }}\n      h={\"32vh\"}\n      flex={1}\n      direction={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      gap={4}\n      borderRadius={20}\n      px={8}\n    >\n      <Heading as={\"h1\"}>Sociohub</Heading>\n      <h2>Control across all your socials</h2>\n      <Image\n        src=\"/onboarding-poster.webp\"\n        alt=\"helper\"\n        maxH={\"lg\"}\n        borderRadius={12}\n      />\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import FormContainer from \"./FormContainer\";\n\nexport default FormContainer;\n","import { ShortVideoItem } from \"./ShortVideoItem\";\n\nexport default ShortVideoItem;","import { useEffect, useRef, useState, VideoHTMLAttributes } from \"react\";\nimport \"./styles.css\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport interface ShortVideoItemProps\n  extends VideoHTMLAttributes<typeof ShortVideoItem> {\n  nextId: string;\n  channelId?: string;\n  description?: string;\n}\n\nexport const ShortVideoItem = (props: ShortVideoItemProps) => {\n  const { src } = props;\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && entry.intersectionRatio >= 0.4) {\n          if (videoRef.current) {\n            videoRef.current.play().catch((error) => {\n              console.error(\"Playback error:\", error);\n            });\n            setIsPlaying(true);\n            videoRef.current.scrollIntoView();\n          }\n        } else {\n          if (videoRef.current) {\n            setIsPlaying(false);\n            videoRef.current.pause();\n          }\n        }\n      },\n      { threshold: 0.4 }\n    );\n\n    if (videoRef.current) {\n      observer.observe(videoRef.current);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        observer.unobserve(videoRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        background: \"black\",\n        overflowX: \"hidden\",\n        position: \"relative\",\n        overflowY: \"hidden\",\n      }}\n    >\n      <Box\n        id={props.id}\n        width={{ base: \"100%\", md: \"400px\" }}\n        height={{ base: \"100%\", md: \"600px\" }}\n        borderRadius={\"12px\"}\n        onClick={() => {\n          if (isPlaying) {\n            videoRef.current?.pause();\n          } else {\n            videoRef.current?.play().catch((error) => {\n              console.error(\"Playback error:\", error);\n            });\n          }\n          setIsPlaying(!isPlaying);\n        }}\n      >\n        <video\n          ref={videoRef}\n          src={src}\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            objectFit: \"contain\",\n          }}\n          onEnded={() => {\n            console.log(\"Video ended\");\n            const nextVideo = document.getElementById(props.nextId);\n            nextVideo?.scrollIntoView();\n          }}\n        ></video>\n      </Box>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"50px\",\n          color: \"white\",\n          fontSize: \"20px\",\n          fontWeight: \"bold\",\n        }}\n      >\n        {props.channelId}\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"32px\",\n          color: \"white\",\n          fontSize: \"16px\",\n        }}\n      >\n        {props.description}\n      </div>\n    </div>\n  );\n};\n","import { ShortVideoList } from \"./ShortsVideoList\";\n\nexport default ShortVideoList;\n","import { Button } from \"@chakra-ui/react\";\nimport ShortVideoItem from \"./ShortVideoItem\";\nimport { ShortVideoItemProps } from \"./ShortVideoItem/ShortVideoItem\";\nimport { useRef } from \"react\";\n\nexport interface ShortVideoListProps {\n  list: ShortVideoItemProps[];\n}\n\nexport const ShortVideoList = (props: ShortVideoListProps) => {\n  const shortContainerRef = useRef<HTMLDivElement>(null);\n  console.log(\"DEBUGXX\", props.list);\n  if (!props.list) return null;\n  return (\n    <div>\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n          display: \"grid\",\n          placeItems: \"center\",\n          background: \"#23232388\",\n        }}\n      >\n        <Button\n          variant={\"solid\"}\n          title=\"Start\"\n          onClick={() => {\n            if (shortContainerRef.current) {\n              shortContainerRef.current.scrollIntoView({ behavior: \"smooth\" });\n            }\n          }}\n        >\n          Start Shorts\n        </Button>\n      </div>\n      <div id=\"shorts-container\" ref={shortContainerRef}>\n        {props.list.map((item) => {\n          return <ShortVideoItem {...item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport ShortVideoList from \"./ShortsVideoList\";\nimport { ShortVideoListProps } from \"./ShortsVideoList/ShortsVideoList\";\n\nconst list: ShortVideoListProps = {\n  list: [\n    {\n      id: \"video-2\",\n      src: \"/videos/video-2.mp4\",\n      nextId: \"video-3\",\n      channelId: \"RajeshArora\",\n      description: \"Ariana\",\n    },\n    {\n      id: \"video-3\",\n      nextId: \"video-4\",\n      src: \"/videos/video-3.mp4\",\n      description: \"TMKOC\",\n    },\n    {\n      id: \"video-4\",\n      nextId: \"video-5\",\n      src: \"/videos/video-4.mp4\",\n      description: \"Hrithik roshan\",\n    },\n    {\n      id: \"video-5\",\n      nextId: \"video-6\",\n      src: \"/videos/video-5.mp4\",\n      description: \"Hrithik roshan is dancing very good\",\n    },\n    {\n      id: \"video-6\",\n      nextId: \"video-7\",\n      src: \"/videos/video-6.mp4\",\n      description: \"Frontend masters mein people teaching so much\",\n    },\n    {\n      id: \"video-7\",\n      nextId: \"video-8\",\n      src: \"/videos/video-7.mp4\",\n    },\n    {\n      id: \"video-8\",\n      nextId: \"video-9\",\n      src: \"/videos/video-8.mp4\",\n    },\n    {\n      id: \"video-9\",\n      nextId: \"video-2\",\n      src: \"/videos/video-9.mp4\",\n    },\n  ],\n};\n\nexport const ShortsFeedPage: React.FunctionComponent = (props: any) => {\n  const [videoList, setVideoList] = useState(list.list);\n\n  // uncomment on api server is ready\n  //   useEffect(() => {\n  //     fetch(\"http://localhost:1337/api/articles\")\n  //       .then((res) => {\n  //         if (!res.ok) throw new Error();\n  //         return res.json();\n  //       })\n  //       .then((data) => {\n  //         console.log(\"body\", data.data);\n  //         setVideoList(data.data);\n  //       })\n  //       .catch((e) => console.error(e));\n  //   }, []);\n\n  return (\n    <div>\n      <ShortVideoList list={videoList} />\n    </div>\n  );\n};\n","import { ShortsFeedPage } from \"./ShortsFeedPage\";\nexport default ShortsFeedPage;\n","import { FormEvent } from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  useToast,\n  Flex,\n  Spacer,\n  Box,\n  Link,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport CONSTANTS from \"../../EnvConstant\";\nimport FormContainer from \"../../components/FormContainer\";\nimport { SiGoogle } from \"react-icons/si\";\n\nconst SignUpPage: React.FunctionComponent<any> = (props) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n\n  const [isRegistering, setIsRegistering] = useState<boolean>(false);\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  function submitSignUpForm(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    setIsRegistering(true);\n\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\" ||\n      !validateEmail(email)\n    ) {\n      if (!toast.isActive(\"signup-error\")) {\n        toast({\n          // todo add the username here\n          id: \"signup-error\",\n          title: \"Invalid data cannot be empty\",\n          description: \"Field empty\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n      setIsRegistering(false);\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      if (!toast.isActive(\"password-mismatch\")) {\n        toast({\n          id: \"password-mismatch\",\n          title: \"Passwords don't match\",\n          description: \"Please make sure your passwords match\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n      setIsRegistering(false);\n      return;\n    }\n\n    fetch(CONSTANTS.api_server_url + \"/api/v1/signup\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password,\n      }),\n    })\n      .then(async (res) => {\n        const data = await res.json();\n        if (res.ok) {\n          return data;\n        }\n\n        throw new Error(data.message);\n      })\n      .then((data) => {\n        console.log(data.access_token);\n        toast({\n          // todo add the user name here\n          title: \"Account Creation successful\",\n          description: \"\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n\n        if (data?.access_token) {\n          window.localStorage.setItem(\"access_token\", data.access_token);\n          window.localStorage.setItem(\"current_username\", data.username);\n          window.localStorage.setItem(\"current_user_email\", data.user_email);\n          window.localStorage.setItem(\"authenticated\", \"true\");\n          document.cookie = \"access_token=\" + data.access_token;\n        } else {\n          console.error(\"access token is empty or undefined\");\n        }\n        navigate(\"/app/home\");\n      })\n      .catch((err) => {\n        console.log(err);\n        toast({\n          // todo add the user name here\n          title: \"Signup Failed\",\n          description: err.message,\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      })\n      .finally(() => {\n        setIsRegistering(false);\n      });\n  }\n\n  function validateEmail(email: any) {\n    if (email === \"\") return false;\n    return true;\n  }\n\n  // function handleGoogleAuth() {\n  // fetch(CONSTANTS.api_server_url + \"/v1/google/oauth2/signup\")\n  //   .then((res) => res.json())\n  //   .then()\n  //   .catch()\n  //   .finally();\n  // }\n\n  function oauthSignIn() {\n    // Google's OAuth 2.0 endpoint for requesting an access token\n    var oauth2Endpoint = \"https://accounts.google.com/o/oauth2/v2/auth\";\n\n    // Create <form> element to submit parameters to OAuth 2.0 endpoint.\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"method\", \"GET\"); // Send as a GET request.\n    form.setAttribute(\"action\", oauth2Endpoint);\n\n    // Parameters to pass to OAuth 2.0 endpoint.\n    var params: any = {\n      client_id:\n        \"400956389014-h8i654igfoqm53ud0694bhk649kigaur.apps.googleusercontent.com\",\n      redirect_uri: \"http://localhost:8080/v1/google/oauth2/signup/callback\",\n      response_type: \"token\",\n      scope: \"openid email profile\",\n      include_granted_scopes: \"true\",\n      state: \"pass-through value\",\n      prompt: \"select_account\",\n    };\n\n    // Add form parameters as hidden input values.\n    for (var p in params) {\n      var input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"hidden\");\n      input.setAttribute(\"name\", p);\n      input.setAttribute(\"value\", params[p]);\n      form.appendChild(input);\n    }\n\n    // Add form to page and submit it to open the OAuth 2.0 endpoint.\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  return (\n    <FormContainer\n      headingText=\"Create Account\"\n      description={\"Create Account to start managing your posts\"}\n    >\n      <form onSubmit={submitSignUpForm}>\n        <Flex\n          direction={\"column\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n          gap={2}\n        >\n          {/* Will use org Id concept later when we have a org */}\n          {/* <FormControl id=\"orgname\">\n            <FormLabel>Organisation Id</FormLabel>\n            <Input\n              type=\"text\"\n              value={organisationId}\n              onChange={(e) => {\n                setOrganisationId(e.currentTarget.value);\n              }}\n            />\n          </FormControl> */}\n          {/* // keeping it as username because chrome picks the email to save from this field id */}\n          <FormControl id=\"username\" isRequired>\n            <FormLabel>Email address</FormLabel>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"name\" isRequired>\n            <FormLabel mt={2}>Username</FormLabel>\n            <Input\n              type=\"text\"\n              value={username}\n              onChange={(e) => {\n                const inputText = e.currentTarget.value;\n                setUsername(inputText.toLowerCase());\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"password\" isRequired>\n            <FormLabel mt={2}>Password</FormLabel>\n            <Input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          <FormControl id=\"confirm-password\" isRequired>\n            <FormLabel mt={2}>Confirm Password</FormLabel>\n            <Input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => {\n                setConfirmPassword(e.currentTarget.value);\n              }}\n            />\n          </FormControl>\n          {/* Spacer */}\n          <Box h={4}></Box>\n          <Flex w={\"full\"}>\n            <Button\n              flex={1}\n              colorScheme=\"gray\"\n              type=\"submit\"\n              isLoading={isRegistering}\n            >\n              Sign up\n            </Button>\n          </Flex>\n          <Box py={4} w={\"full\"} textAlign={\"end\"}>\n            <Link as={RouterLink} to=\"/signin\" color={\"blue.400\"}>\n              Already have an account ?\n            </Link>\n          </Box>\n        </Flex>\n      </form>\n      {/* <Button leftIcon={<SiGoogle />} onClick={oauthSignIn}>\n        Continue With Google\n      </Button> */}\n    </FormContainer>\n  );\n};\n\nexport default SignUpPage;\n","import SignUpPage from \"./SignUpPage\";\n\nexport default SignUpPage;\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n"],"names":["api_server_url","path_prefix","AppOverView","_jsxs","Flex","display","base","md","h","flex","direction","justifyContent","alignItems","gap","borderRadius","px","children","_jsx","Heading","as","Image","src","alt","maxH","props","backgroundColor","Stack","spacing","mx","minW","lg","maxW","py","Card","CardHeader","align","fontSize","headingText","Text","color","description","Box","rounded","bg","useColorModeValue","boxShadow","p","videoRef","useRef","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","intersectionRatio","current","play","catch","error","console","scrollIntoView","pause","threshold","observe","unobserve","style","flexDirection","height","width","background","overflowX","position","overflowY","id","onClick","_videoRef$current","_videoRef$current2","ref","objectFit","onEnded","log","nextVideo","document","getElementById","nextId","bottom","fontWeight","channelId","shortContainerRef","list","placeItems","Button","variant","title","behavior","map","item","ShortVideoItem","_objectSpread","videoList","ShortVideoList","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","isRegistering","setIsRegistering","toast","useToast","navigate","useNavigate","FormContainer","onSubmit","e","preventDefault","validateEmail","isActive","status","duration","isClosable","fetch","CONSTANTS","method","body","JSON","stringify","then","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","json","sent","ok","abrupt","Error","message","stop","_x","apply","arguments","access_token","window","localStorage","setItem","user_email","cookie","err","finally","FormControl","isRequired","FormLabel","Input","type","value","onChange","currentTarget","mt","inputText","toLowerCase","w","colorScheme","isLoading","textAlign","Link","RouterLink","to","forwardRef","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","isExternal","rest","_objectWithoutProperties","_excluded","jsx","chakra","target","rel","cx","__css","displayName"],"sourceRoot":""}